{"version":3,"sources":["api/index.js","components/Diary/mood.js","components/Diary/newEntry.js","components/Diary/entry.js","components/Graphs/mood.js","components/Diary/moodEntry.js","components/Diary/entries.js","components/Diary/collapse.js","components/Diary/toolBar.js","screens/Diary/main.js","screens/Welcome/main.js","App.js","reportWebVitals.js","index.js"],"names":["api","axios","create","baseURL","apis","createEntry","payload","post","getEntries","get","updateEntry","id","put","deleteEntry","delete","getEntry","createMood","getMoods","updateMood","deleteMood","getMood","getUser","email","createUser","updateUser","cells","color","label","value","x","y","Mood","props","toggleMoodMeter","submit","useState","mood","setMood","selectCell","cell","renderCellLabel","_cell","undefined","onClick","className","e","Row","Col","lg","xl","map","row","rIndex","cIndex","style","backgroundColor","Button","variant","xs","block","dateFormat","NewEntry","collapsed","setCollapsed","theme","setEntries","user","moment","Date","format","date","setDate","content","setContent","moodMeter","setMoodMeter","changeContent","event","target","toSubmit","time","_id","console","log","then","res","output","data","old","catch","error","Form","Label","Control","type","onChange","Dropdown","Toggle","DropdownIndicator","Menu","_date","energy","pleasantness","as","rows","size","Entry","entry","collapseAllTrigger","expandAllTrigger","editEntry","editing","setEditing","stopEditing","useMemo","width","edit","_entry","AnnualMood","moods","title","recent","setData","useEffect","renderData","_data","forEach","push","amt","parseInt","sort","a","b","slice","fontSize","length","LineChart","height","margin","top","right","left","bottom","XAxis","dataKey","Tooltip","Line","stroke","yAxisId","MoodEntry","renderContent","energetic","pleasant","renderAdvice","Entries","filter","entries","setMoods","dates","setDates","getDates","_dates","index","includes","calculateFilter","start","startDate","isBefore","endDate","end","isAfter","isSameOrAfter","isSameOrBefore","o","body","d","yIndex","toggleCollapse","ToolBar","setCollapseAllTrigger","setExpandAllTrigger","setFilter","initialFilter","tools","icon","action","dropdown","ranges","selection","rangeColors","tool","OverlayTrigger","placement","overlay","toolItem","tIndex","subtract","key","Main","toggleTheme","signOut","hasOwnProperty","Container","fluid","nickname","Moods","signIn","md","App","useAuth0","loginWithRedirect","logout","setTheme","dbUser","setDbUser","connectUserToDb","path","exact","render","Loading","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","domain","process","REACT_APP_AUTH0_DOMAIN","clientId","REACT_APP_AUTH0_CLIENT_ID","ReactDOM","redirectUri","window","location","origin","document","getElementById"],"mappings":"k3BAEMA,E,OAAMC,EAAMC,OAAO,CACrBC,QAAS,8BAsCEC,EAhBF,CACTC,YAnBuB,SAAAC,GAAO,OAAIN,EAAIO,KAAJ,SAAmBD,IAoBrDE,WAnBsB,kBAAMR,EAAIS,IAAJ,aAoB5BC,YAnBuB,SAACC,EAAIL,GAAL,OAAiBN,EAAIY,IAAJ,iBAAkBD,GAAML,IAoBhEO,YAnBuB,SAAAF,GAAE,OAAIX,EAAIc,OAAJ,iBAAqBH,KAoBlDI,SAnBoB,SAAAJ,GAAE,OAAIX,EAAIS,IAAJ,iBAAkBE,KAoB5CK,WAjBsB,SAAAV,GAAO,OAAIN,EAAIO,KAAJ,QAAkBD,IAkBnDW,SAjBoB,kBAAMjB,EAAIS,IAAJ,UAkB1BS,WAjBsB,SAACP,EAAIL,GAAL,OAAiBN,EAAIY,IAAJ,gBAAiBD,GAAML,IAkB9Da,WAjBsB,SAAAR,GAAE,OAAIX,EAAIc,OAAJ,gBAAoBH,KAkBhDS,QAjBmB,SAAAT,GAAE,OAAIX,EAAIS,IAAJ,gBAAiBE,KAkB1CU,QAfmB,SAAAC,GAAK,OAAItB,EAAIS,IAAJ,gBAAiBa,KAgB7CC,WAfsB,SAAAjB,GAAO,OAAIN,EAAIO,KAAJ,QAAkBD,IAgBnDkB,WAfsB,SAACb,EAAIL,GAAL,OAAiBN,EAAIY,IAAJ,gBAAiBD,GAAML,K,uCClB5DmB,EAAQ,CACV,CACI,CAACC,MAAO,UAAWC,MAAO,UAAWC,MAAO,CAACC,EAAG,EAAGC,EAAG,IACtD,CAACJ,MAAO,UAAWC,MAAO,WAAYC,MAAO,CAACC,EAAG,EAAGC,EAAG,IACvD,CAACJ,MAAO,UAAWC,MAAO,WAAYC,MAAO,CAACC,EAAG,EAAGC,EAAG,IACvD,CAACJ,MAAO,UAAWC,MAAO,UAAWC,MAAO,CAACC,EAAG,EAAGC,EAAG,IACtD,CAACJ,MAAO,UAAWC,MAAO,UAAWC,MAAO,CAACC,EAAG,EAAGC,EAAG,IACtD,CAACJ,MAAO,UAAWC,MAAO,WAAYC,MAAO,CAACC,EAAG,EAAGC,EAAG,IACvD,CAACJ,MAAO,UAAWC,MAAO,SAAUC,MAAO,CAACC,EAAG,EAAGC,EAAG,IACrD,CAACJ,MAAO,UAAWC,MAAO,UAAWC,MAAO,CAACC,EAAG,EAAGC,EAAG,IACtD,CAACJ,MAAO,UAAWC,MAAO,cAAeC,MAAO,CAACC,EAAG,EAAGC,EAAG,IAC1D,CAACJ,MAAO,UAAWC,MAAO,WAAYC,MAAO,CAACC,EAAG,EAAGC,EAAG,KAE3D,CACI,CAACJ,MAAO,UAAWC,MAAO,QAASC,MAAO,CAACC,EAAG,EAAGC,EAAG,IACpD,CAACJ,MAAO,UAAWC,MAAO,UAAWC,MAAO,CAACC,EAAG,EAAGC,EAAG,IACtD,CAACJ,MAAO,UAAWC,MAAO,aAAcC,MAAO,CAACC,EAAG,EAAGC,EAAG,IACzD,CAACJ,MAAO,UAAWC,MAAO,QAASC,MAAO,CAACC,EAAG,EAAGC,EAAG,IACpD,CAACJ,MAAO,UAAWC,MAAO,UAAWC,MAAO,CAACC,EAAG,EAAGC,EAAG,IACtD,CAACJ,MAAO,UAAWC,MAAO,QAASC,MAAO,CAACC,EAAG,EAAGC,EAAG,IACpD,CAACJ,MAAO,UAAWC,MAAO,WAAYC,MAAO,CAACC,EAAG,EAAGC,EAAG,IACvD,CAACJ,MAAO,UAAWC,MAAO,YAAaC,MAAO,CAACC,EAAG,EAAGC,EAAG,IACxD,CAACJ,MAAO,UAAWC,MAAO,WAAYC,MAAO,CAACC,EAAG,EAAGC,EAAG,IACvD,CAACJ,MAAO,UAAWC,MAAO,SAAUC,MAAO,CAACC,EAAG,EAAGC,EAAG,KAEzD,CACI,CAACJ,MAAO,UAAWC,MAAO,SAAUC,MAAO,CAACC,EAAG,EAAGC,EAAG,IACrD,CAACJ,MAAO,UAAWC,MAAO,aAAcC,MAAO,CAACC,EAAG,EAAGC,EAAG,IACzD,CAACJ,MAAO,UAAWC,MAAO,QAASC,MAAO,CAACC,EAAG,EAAGC,EAAG,IACpD,CAACJ,MAAO,UAAWC,MAAO,UAAWC,MAAO,CAACC,EAAG,EAAGC,EAAG,IACtD,CAACJ,MAAO,UAAWC,MAAO,WAAYC,MAAO,CAACC,EAAG,EAAGC,EAAG,IACvD,CAACJ,MAAO,UAAWC,MAAO,YAAaC,MAAO,CAACC,EAAG,EAAGC,EAAG,IACxD,CAACJ,MAAO,UAAWC,MAAO,SAAUC,MAAO,CAACC,EAAG,EAAGC,EAAG,IACrD,CAACJ,MAAO,UAAWC,MAAO,eAAgBC,MAAO,CAACC,EAAG,EAAGC,EAAG,IAC3D,CAACJ,MAAO,UAAWC,MAAO,aAAcC,MAAO,CAACC,EAAG,EAAGC,EAAG,IACzD,CAACJ,MAAO,UAAWC,MAAO,UAAWC,MAAO,CAACC,EAAG,EAAGC,EAAG,KAE1D,CACI,CAACJ,MAAO,UAAWC,MAAO,UAAWC,MAAO,CAACC,EAAG,EAAGC,EAAG,IACtD,CAACJ,MAAO,UAAWC,MAAO,eAAgBC,MAAO,CAACC,EAAG,EAAGC,EAAG,IAC3D,CAACJ,MAAO,UAAWC,MAAO,UAAWC,MAAO,CAACC,EAAG,EAAGC,EAAG,IACtD,CAACJ,MAAO,UAAWC,MAAO,YAAaC,MAAO,CAACC,EAAG,EAAGC,EAAG,IACxD,CAACJ,MAAO,UAAWC,MAAO,UAAWC,MAAO,CAACC,EAAG,EAAGC,EAAG,IACtD,CAACJ,MAAO,UAAWC,MAAO,UAAWC,MAAO,CAACC,EAAG,EAAGC,EAAG,IACtD,CAACJ,MAAO,UAAWC,MAAO,QAASC,MAAO,CAACC,EAAG,EAAGC,EAAG,IACpD,CAACJ,MAAO,UAAWC,MAAO,UAAWC,MAAO,CAACC,EAAG,EAAGC,EAAG,IACtD,CAACJ,MAAO,UAAWC,MAAO,QAASC,MAAO,CAACC,EAAG,EAAGC,EAAG,IACpD,CAACJ,MAAO,UAAWC,MAAO,WAAYC,MAAO,CAACC,EAAG,EAAGC,EAAG,KAE3D,CACI,CAACJ,MAAO,UAAWC,MAAO,WAAYC,MAAO,CAACC,EAAG,EAAGC,EAAG,IACvD,CAACJ,MAAO,UAAWC,MAAO,WAAYC,MAAO,CAACC,EAAG,EAAGC,EAAG,IACvD,CAACJ,MAAO,UAAWC,MAAO,YAAaC,MAAO,CAACC,EAAG,EAAGC,EAAG,IACxD,CAACJ,MAAO,UAAWC,MAAO,SAAUC,MAAO,CAACC,EAAG,EAAGC,EAAG,IACrD,CAACJ,MAAO,UAAWC,MAAO,SAAUC,MAAO,CAACC,EAAG,EAAGC,EAAG,IACrD,CAACJ,MAAO,UAAWC,MAAO,WAAYC,MAAO,CAACC,EAAG,EAAGC,EAAG,IACvD,CAACJ,MAAO,UAAWC,MAAO,SAAUC,MAAO,CAACC,EAAG,EAAGC,EAAG,IACrD,CAACJ,MAAO,UAAWC,MAAO,UAAWC,MAAO,CAACC,EAAG,EAAGC,EAAG,IACtD,CAACJ,MAAO,UAAWC,MAAO,UAAWC,MAAO,CAACC,EAAG,EAAGC,EAAG,IACtD,CAACJ,MAAO,UAAWC,MAAO,WAAYC,MAAO,CAACC,EAAG,EAAGC,EAAG,KAE3D,CACI,CAACJ,MAAO,UAAWC,MAAO,YAAaC,MAAO,CAACC,EAAG,EAAGC,EAAG,IACxD,CAACJ,MAAO,UAAWC,MAAO,OAAQC,MAAO,CAACC,EAAG,EAAGC,EAAG,IACnD,CAACJ,MAAO,UAAWC,MAAO,eAAgBC,MAAO,CAACC,EAAG,EAAGC,EAAG,IAC3D,CAACJ,MAAO,UAAWC,MAAO,OAAQC,MAAO,CAACC,EAAG,EAAGC,EAAG,IACnD,CAACJ,MAAO,UAAWC,MAAO,YAAaC,MAAO,CAACC,EAAG,EAAGC,EAAG,IACxD,CAACJ,MAAO,UAAWC,MAAO,UAAWC,MAAO,CAACC,EAAG,EAAGC,EAAG,IACtD,CAACJ,MAAO,UAAWC,MAAO,YAAaC,MAAO,CAACC,EAAG,EAAGC,EAAG,IACxD,CAACJ,MAAO,UAAWC,MAAO,UAAWC,MAAO,CAACC,EAAG,EAAGC,EAAG,IACtD,CAACJ,MAAO,UAAWC,MAAO,SAAUC,MAAO,CAACC,EAAG,EAAGC,EAAG,IACrD,CAACJ,MAAO,UAAWC,MAAO,YAAaC,MAAO,CAACC,EAAG,EAAGC,EAAG,KAE5D,CACI,CAACJ,MAAO,UAAWC,MAAO,cAAeC,MAAO,CAACC,EAAG,EAAGC,EAAG,IAC1D,CAACJ,MAAO,UAAWC,MAAO,SAAUC,MAAO,CAACC,EAAG,EAAGC,EAAG,IACrD,CAACJ,MAAO,UAAWC,MAAO,aAAcC,MAAO,CAACC,EAAG,EAAGC,EAAG,IACzD,CAACJ,MAAO,UAAWC,MAAO,MAAOC,MAAO,CAACC,EAAG,EAAGC,EAAG,IAClD,CAACJ,MAAO,UAAWC,MAAO,QAASC,MAAO,CAACC,EAAG,EAAGC,EAAG,IACpD,CAACJ,MAAO,UAAWC,MAAO,OAAQC,MAAO,CAACC,EAAG,EAAGC,EAAG,IACnD,CAACJ,MAAO,UAAWC,MAAO,SAAUC,MAAO,CAACC,EAAG,EAAGC,EAAG,IACrD,CAACJ,MAAO,UAAWC,MAAO,YAAaC,MAAO,CAACC,EAAG,EAAGC,EAAG,IACxD,CAACJ,MAAO,UAAWC,MAAO,WAAYC,MAAO,CAACC,EAAG,EAAGC,EAAG,IACvD,CAACJ,MAAO,UAAWC,MAAO,UAAWC,MAAO,CAACC,EAAG,EAAGC,EAAG,KAE1D,CACI,CAACJ,MAAO,UAAWC,MAAO,YAAaC,MAAO,CAACC,EAAG,EAAGC,EAAG,IACxD,CAACJ,MAAO,UAAWC,MAAO,YAAaC,MAAO,CAACC,EAAG,EAAGC,EAAG,IACxD,CAACJ,MAAO,UAAWC,MAAO,SAAUC,MAAO,CAACC,EAAG,EAAGC,EAAG,IACrD,CAACJ,MAAO,UAAWC,MAAO,eAAgBC,MAAO,CAACC,EAAG,EAAGC,EAAG,IAC3D,CAACJ,MAAO,UAAWC,MAAO,QAASC,MAAO,CAACC,EAAG,EAAGC,EAAG,IACpD,CAACJ,MAAO,UAAWC,MAAO,UAAWC,MAAO,CAACC,EAAG,EAAGC,EAAG,IACtD,CAACJ,MAAO,UAAWC,MAAO,QAASC,MAAO,CAACC,EAAG,EAAGC,EAAG,IACpD,CAACJ,MAAO,UAAWC,MAAO,UAAWC,MAAO,CAACC,EAAG,EAAGC,EAAG,IACtD,CAACJ,MAAO,UAAWC,MAAO,UAAWC,MAAO,CAACC,EAAG,EAAGC,EAAG,IACtD,CAACJ,MAAO,UAAWC,MAAO,WAAYC,MAAO,CAACC,EAAG,EAAGC,EAAG,KAE3D,CACI,CAACJ,MAAO,UAAWC,MAAO,aAAcC,MAAO,CAACC,EAAG,EAAGC,EAAG,IACzD,CAACJ,MAAO,UAAWC,MAAO,YAAaC,MAAO,CAACC,EAAG,EAAGC,EAAG,IACxD,CAACJ,MAAO,UAAWC,MAAO,SAAUC,MAAO,CAACC,EAAG,EAAGC,EAAG,IACrD,CAACJ,MAAO,UAAWC,MAAO,YAAaC,MAAO,CAACC,EAAG,EAAGC,EAAG,IACxD,CAACJ,MAAO,UAAWC,MAAO,WAAYC,MAAO,CAACC,EAAG,EAAGC,EAAG,IACvD,CAACJ,MAAO,UAAWC,MAAO,SAAUC,MAAO,CAACC,EAAG,EAAGC,EAAG,IACrD,CAACJ,MAAO,UAAWC,MAAO,aAAcC,MAAO,CAACC,EAAG,EAAGC,EAAG,IACzD,CAACJ,MAAO,UAAWC,MAAO,WAAYC,MAAO,CAACC,EAAG,EAAGC,EAAG,IACvD,CAACJ,MAAO,UAAWC,MAAO,QAASC,MAAO,CAACC,EAAG,EAAGC,EAAG,IACpD,CAACJ,MAAO,UAAWC,MAAO,WAAYC,MAAO,CAACC,EAAG,EAAGC,EAAG,KAE3D,CACI,CAACJ,MAAO,UAAWC,MAAO,UAAWC,MAAO,CAACC,EAAG,EAAGC,EAAG,IACtD,CAACJ,MAAO,UAAWC,MAAO,WAAYC,MAAO,CAACC,EAAG,EAAGC,EAAG,IACvD,CAACJ,MAAO,UAAWC,MAAO,WAAYC,MAAO,CAACC,EAAG,EAAGC,EAAG,IACvD,CAACJ,MAAO,UAAWC,MAAO,QAASC,MAAO,CAACC,EAAG,EAAGC,EAAG,IACpD,CAACJ,MAAO,UAAWC,MAAO,UAAWC,MAAO,CAACC,EAAG,EAAGC,EAAG,IACtD,CAACJ,MAAO,UAAWC,MAAO,SAAUC,MAAO,CAACC,EAAG,EAAGC,EAAG,IACrD,CAACJ,MAAO,UAAWC,MAAO,aAAcC,MAAO,CAACC,EAAG,EAAGC,EAAG,IACzD,CAACJ,MAAO,UAAWC,MAAO,WAAYC,MAAO,CAACC,EAAG,EAAGC,EAAG,IACvD,CAACJ,MAAO,UAAWC,MAAO,OAAQC,MAAO,CAACC,EAAG,EAAGC,EAAG,IACnD,CAACJ,MAAO,UAAWC,MAAO,SAAUC,MAAO,CAACC,EAAG,EAAGC,EAAG,MA0F9CC,EArFF,SAACC,GAAW,IACbC,EAA4BD,EAA5BC,gBAAiBC,EAAWF,EAAXE,OADL,EAEMC,mBAAS,MAFf,mBAEZC,EAFY,KAENC,EAFM,KAIdC,EAAa,SAACC,GAChBF,EAAQE,IAGNC,EAAkB,SAACV,EAAGD,GACxB,IACI,IAAMY,EAAQhB,EAAM,EAAGK,GAAID,GAC3B,OAAIY,QAAmBC,IAAVD,EACD,qBAAKE,QAAS,kBAAML,EAAWG,IAAQG,UAAU,aAAjD,SAA+DH,EAAMd,QAErE,qBAAKiB,UAAU,aAAf,eAEd,MAAMC,GAEJ,OAAQ,qBAAKD,UAAU,aAAf,iBAUhB,OACI,eAACE,EAAA,EAAD,CAAKF,UAAU,OAAf,UACI,eAACG,EAAA,EAAD,CAAKC,GAAI,OAAQC,GAAI,EAAGL,UAAU,uBAAlC,UACKnB,EAAMyB,KAAI,SAACC,EAAKC,GACb,OACI,qBAAKR,UAAU,gBAAf,SACKO,EAAID,KAAI,SAACX,EAAMc,GACZ,OACI,qBACIV,QAAS,kBAAML,EAAWC,IAC1BK,UAAWL,IAASH,EAAO,qBAAuB,YAClDkB,MAAO,CAACC,gBAAiBhB,EAAKb,QAHlC,oBAIsB2B,QAPlC,mBAAgDD,OAcxD,qBAAIR,UAAU,cAAd,UAA6B,cAAC,IAAD,IAA7B,iBAAyD,cAAC,IAAD,OACzD,qBAAIA,UAAU,2BAAd,UAA0C,cAAC,IAAD,IAA1C,WAAgE,cAAC,IAAD,UAGpE,cAACG,EAAA,EAAD,CAAKH,UAAU,wDAAf,SACMR,EAGE,gCACI,sBAAKQ,UAAU,gCAAf,UACKJ,EAAgBJ,EAAKR,MAAME,EAAI,EAAGM,EAAKR,MAAMC,EAAI,GACjDW,EAAgBJ,EAAKR,MAAME,EAAI,EAAGM,EAAKR,MAAMC,GAC7CW,EAAgBJ,EAAKR,MAAME,EAAI,EAAGM,EAAKR,MAAMC,EAAI,MAEtD,sBAAKe,UAAU,gCAAf,UACKJ,EAAgBJ,EAAKR,MAAME,EAAGM,EAAKR,MAAMC,EAAI,GAC9C,qBAAKe,UAAU,aAAf,SAA6BR,EAAKT,QACjCa,EAAgBJ,EAAKR,MAAME,EAAGM,EAAKR,MAAMC,EAAI,MAElD,sBAAKe,UAAU,gCAAf,UACKJ,EAAgBJ,EAAKR,MAAME,EAAI,EAAGM,EAAKR,MAAMC,EAAI,GACjDW,EAAgBJ,EAAKR,MAAME,EAAI,EAAGM,EAAKR,MAAMC,GAC7CW,EAAgBJ,EAAKR,MAAME,EAAI,EAAGM,EAAKR,MAAMC,EAAI,MAGtD,eAAC2B,EAAA,EAAD,CAAQb,QAlDX,WACbT,EAAOE,GACPC,EAAQ,MACRJ,KA+C2CwB,QAAQ,UAAUb,UAAU,YAAvD,oBAA0E,cAAC,IAAD,UAnB9E,kDAyBR,cAACG,EAAA,EAAD,CAAKW,GAAI,GAAT,SACI,cAACF,EAAA,EAAD,CAAQb,QAASV,EAAiB0B,OAAK,EAACF,QAAQ,QAAhD,0BCrMVG,EAAa,UA4HJC,EA1HE,SAAC7B,GAAW,IACjB8B,EAAqD9B,EAArD8B,UAAWC,EAA0C/B,EAA1C+B,aAAcC,EAA4BhC,EAA5BgC,MAAOC,EAAqBjC,EAArBiC,WAAYC,EAASlC,EAATkC,KAD5B,EAEE/B,mBAASgC,IAAO,IAAIC,MAAQC,OAAOT,IAFrC,mBAEhBU,EAFgB,KAEVC,EAFU,OAGQpC,mBAAS,IAHjB,mBAGhBqC,EAHgB,KAGPC,EAHO,OAIYtC,oBAAS,GAJrB,mBAIhBuC,EAJgB,KAILC,EAJK,KAclBC,EAAgB,SAACC,GACnBJ,EAAWI,EAAMC,OAAOlD,QAGtBK,EAAkB,WACpB0C,GAAcD,IAGZxC,EAAS,WACX,IAAM6C,EAAW,CACbT,OACAE,UACAQ,KAAMb,IAAO,IAAIC,MAAQC,OAAO,SAChCH,KAAMA,EAAKe,KAEfC,QAAQC,IAAI,oBAAqBJ,GACjC3E,EAAKC,YAAY0E,GAAUK,MAAK,SAAAC,GAC5B,IAAMC,EAASD,EAAIE,KAAKD,OACxBJ,QAAQC,IAAI,kBAAmBG,GAC/BrB,GAAW,SAAAuB,GAAG,4BAAQA,GAAR,CAAaF,UAC5BG,OAAM,SAAA5C,GACLqC,QAAQQ,MAAM,SAAU7C,MAE5B0B,EAAQJ,IAAO,IAAIC,MAAQC,OAAOT,IAClCa,EAAW,KAwBf,OACI,cAAC3B,EAAA,EAAD,CAAKF,UAAU,OAAf,SACI,cAACG,EAAA,EAAD,UACI,qBAAKH,UAAU,YAAf,SACKkB,EACG,mCACI,sBAAKlB,UAAU,yBAAf,UACI,eAAC+C,EAAA,EAAKC,MAAN,wBAAsB,cAAC,IAAD,OACtB,sBAAKhD,UAAU,sBAAf,UACI,cAAC+C,EAAA,EAAKE,QAAN,CAAcC,KAAK,OAAOlE,MAAO4C,EAASuB,SAAUnB,IACpD,cAACpB,EAAA,EAAD,CAAQb,QAAST,EAAQU,UAAU,YAAYa,QAAQ,UAAvD,SAAiE,cAAC,IAAD,SAErE,cAAC,EAAD,CAAgBK,UAAWA,EAAWC,aAAcA,SAI5D,qCACI,sBAAKnB,UAAU,eAAf,UACI,eAAC+C,EAAA,EAAKC,MAAN,wBAAsB,cAAC,IAAD,OACtB,sBAAKhD,UAAU,4BAAf,UACI,eAACoD,EAAA,EAAD,CAAUpD,UAAU,0BAApB,UACI,eAACoD,EAAA,EAASC,OAAV,CAAiBC,mBAAiB,EAACzC,QAAQ,QAAQb,UAAU,iBAA7D,2BACmB0B,KAGnB,eAAC0B,EAAA,EAASG,KAAV,WACI,cAAC,WAAD,CACIvE,MAAO,IAAIwC,KAAKE,GAChByB,SApFzB,SAACK,GAChBlB,QAAQC,IAAI,aAAciB,GAC1B7B,EAAQJ,IAAOiC,GAAO/B,OAAOT,KAmFWlC,MAAiB,iBAAVsC,EAA2B,UAAY,YAElD,cAACR,EAAA,EAAD,CAAQG,OAAK,EAACF,QAAQ,QAAQd,QAnFpD,WACd4B,EAAQJ,IAAO,IAAIC,MAAQC,OAAOT,KAkFE,yBAGR,cAAC,EAAD,CAAgBE,UAAWA,EAAWC,aAAcA,UAG3DW,EAAY,cAAC,EAAD,CAAMzC,gBAAiBA,EAAiBC,OA1D1D,SAACE,GAChB,IAAM2C,EAAW,CACbT,OACAU,KAAMb,IAAO,IAAIC,MAAQC,OAAO,SAChCH,KAAMA,EAAKe,IACXtD,MAAOS,EAAKT,MACZ0E,OAAQjE,EAAKR,MAAME,EACnBwE,aAAclE,EAAKR,MAAMC,GAE7BqD,QAAQC,IAAI,wBAAyBJ,GACrC3E,EAAKY,WAAW+D,GAAUK,MAAK,SAAAC,GAC3B,IAAMC,EAASD,EAAIE,KAAKD,OACxBJ,QAAQC,IAAI,sBAAuBG,GACnCrB,GAAW,SAAAuB,GAAG,4BAAQA,GAAR,CAAaF,UAC5BG,OAAM,SAAA5C,GACLqC,QAAQQ,MAAM,aAAc7C,MAEhC0B,EAAQJ,IAAO,IAAIC,MAAQC,OAAOT,IAClCa,EAAW,OAyCa,qCACI,sBAAK7B,UAAU,oBAAf,UACI,cAAC+C,EAAA,EAAKE,QAAN,CAAcU,GAAG,WAAWC,KAAM,EAAG5E,MAAO4C,EAASuB,SAAUnB,IAC/D,eAACpB,EAAA,EAAD,CAAQb,QAAST,EAAQuB,QAAQ,UAAUE,OAAK,EAACf,UAAU,kBAA3D,oBAAoF,cAAC,IAAD,UAIxF,cAACE,EAAA,EAAD,CAAKF,UAAU,OAAf,SACI,cAACG,EAAA,EAAD,UACI,eAACS,EAAA,EAAD,CAAQb,QAASV,EAAiB0B,OAAK,EAACF,QAAQ,QAAhD,kBAA6D,cAAC,IAAD,CAAWgD,KAAM,GAAI7D,UAAU,6BCnHlIgB,EAAa,UAoIJ8C,EAlID,SAAC1E,GAAW,IAElB2E,EAMA3E,EANA2E,MACAC,EAKA5E,EALA4E,mBACAC,EAIA7E,EAJA6E,iBACAhG,EAGAmB,EAHAnB,YACAiG,EAEA9E,EAFA8E,UACA9C,EACAhC,EADAgC,MAPiB,EAUe7B,oBAAS,GAVxB,mBAUb2B,EAVa,KAUFC,EAVE,OAWW5B,mBAAS,MAXpB,mBAWb4E,EAXa,KAWJC,EAXI,OAYK7E,mBAASgC,IAAO,IAAIC,MAAQC,OAAOT,IAZxC,mBAYbU,EAZa,KAYPC,EAZO,OAaWpC,mBAAS,IAbpB,mBAabqC,EAba,KAaJC,EAbI,KAefwC,EAAc,WAChBD,EAAW,MACXzC,EAAQJ,IAAO,IAAIC,MAAQC,OAAOT,IAClCa,EAAW,KA4Cf,OAdAyC,mBAAQ,WACJnD,GAAa,KACd,CAAC8C,IAEJK,mBAAQ,WACJnD,GAAa,KACd,CAAC6C,IAEJM,mBAAQ,YACc,IAAdpD,GACAmD,MAEL,CAACnD,IAGA,cAAChB,EAAA,EAAD,UACI,cAACC,EAAA,EAAD,UACI,qBAAKH,UAAU,OAAf,SACKkB,EACG,mCACI,sBAAKlB,UAAU,6BAAf,UACI,eAAC+C,EAAA,EAAKC,MAAN,WAAae,EAAM3B,KAAnB,IAAyB,cAAC,IAAD,OACzB,qBAAKpC,UAAU,0BAAf,SACK+D,EAAMnC,UAEX,cAAC,EAAD,CAAgBV,UAAWA,EAAWC,aAAcA,SAI3DgD,EAeG,qCACI,sBAAKnE,UAAU,eAAf,UACI,eAAC+C,EAAA,EAAKC,MAAN,WAAamB,EAAQ/B,KAArB,IAA2B,cAAC,IAAD,OAC3B,sBAAKpC,UAAU,4BAAf,UACI,eAACoD,EAAA,EAAD,CAAUpD,UAAU,0BAApB,UACI,eAACoD,EAAA,EAASC,OAAV,CAAiBC,mBAAiB,EAACzC,QAAQ,QAAQb,UAAU,iBAA7D,2BACmB0B,KAGnB,eAAC0B,EAAA,EAASG,KAAV,WACI,cAAC,WAAD,CACIvE,MAAO,IAAIwC,KAAKE,GAChByB,SA7E7B,SAACK,GAChBlB,QAAQC,IAAI,aAAciB,GAC1B7B,EAAQJ,IAAOiC,GAAO/B,OAAOT,KA4EelC,MAAiB,iBAAVsC,EAA2B,UAAY,YAElD,cAACR,EAAA,EAAD,CAAQG,OAAK,EAACF,QAAQ,QAAQd,QA5ExD,WACd4B,EAAQJ,IAAO4C,EAAQzC,MAAMD,OAAOT,KA2EI,yBAGR,cAAC,EAAD,CAAgBE,UAAWA,EAAWC,aAAcA,UAG5D,qBAAKnB,UAAU,oBAAf,SACI,cAAC+C,EAAA,EAAKE,QAAN,CAAcU,GAAG,WAAWC,KAAM,EAAG5E,MAAO4C,EAASuB,SA/E/D,SAAClB,GACnBJ,EAAWI,EAAMC,OAAOlD,QA8EkFgB,UAAU,sBAG5F,sBAAKA,UAAU,kCAAf,UACI,cAACY,EAAA,EAAD,CAAQb,QAASsE,EAAaxD,QAAQ,QAAQH,MAAO,CAAC6D,MAAO,KAA7D,oBACA,cAAC3D,EAAA,EAAD,CAAQb,QAhFpB,WAChB,IAAMyE,EAAO,CACT9C,KAAMA,EACNE,QAASA,GAEbsC,EAAUC,EAAQ9B,IAAKmC,GACvBH,KA0E0DxD,QAAQ,QAAQH,MAAO,CAAC6D,MAAO,KAA7D,2BAzCR,qCACI,sBAAKvE,UAAU,eAAf,UACI,eAAC+C,EAAA,EAAKC,MAAN,WAAae,EAAM3B,KAAnB,IAAyB,cAAC,IAAD,OACzB,cAAC,EAAD,CAAgBlB,UAAWA,EAAWC,aAAcA,OAExD,qBAAKnB,UAAU,gBAAf,SACK+D,EAAMnC,UAEX,sBAAK5B,UAAU,kCAAf,UACI,eAACY,EAAA,EAAD,CAAQb,QAAS,kBAlE1B0E,EAkE8CV,EAjEjEpC,EAAQJ,IAAOkD,EAAO/C,MAAMD,OAAOT,IACnCa,EAAW4C,EAAO7C,cAClBwC,EAAWK,GAHO,IAACA,GAkEsD5D,QAAQ,QAAQH,MAAO,CAAC6D,MAAO,KAA5E,kBAAuF,cAAC,IAAD,CAAgBvE,UAAU,YACjH,eAACY,EAAA,EAAD,CAAQb,QAAS,kBAAM9B,EAAY8F,EAAM1B,MAAMxB,QAAQ,QAAQH,MAAO,CAAC6D,MAAO,KAA9E,oBAA2F,cAAC,IAAD,oB,mCCpBhHG,EA9CI,SAACtF,GAAW,IACnBgC,EAAgChC,EAAhCgC,MAAOuD,EAAyBvF,EAAzBuF,MAAOC,EAAkBxF,EAAlBwF,MAAOC,EAAWzF,EAAXyF,OADH,EAEAtF,mBAAS,IAFT,mBAElBoD,EAFkB,KAEZmC,EAFY,KAI1BC,qBAAU,WACNC,MACD,CAACL,IAEJ,IAAMK,EAAa,WACf,IAAIC,EAAQ,GACZN,EAAMO,SAAQ,SAAA1F,GACVyF,EAAME,KAAK,CAACpG,MAAOS,EAAKkC,KAAM+B,OAAQjE,EAAKiE,OAAQC,aAAclE,EAAKkE,aAAc0B,IAAKC,SAAS9D,IAAO/B,EAAKkC,MAAMD,OAAO,kBAE/HwD,EAAMK,MAAK,SAACC,EAAGC,GAAJ,OAAUD,EAAEH,IAAMI,EAAEJ,OAC3BP,GACFI,EAAMQ,MAAM,EAAG,GAEjBnD,QAAQC,IAAI,OAAQ0C,GACpBH,EAAQG,IAKZ,OACI,gCACI,qBAAKjF,UAAU,gCAAf,SAAgD4E,IAChD,sBAAK5E,UAAU,YAAYU,MAAO,CAAC5B,MAAO,UAAW4G,SAAU,IAA/D,UAAoE,cAAC,IAAD,IAApE,aACA,sBAAK1F,UAAU,yBAAyBU,MAAO,CAACgF,SAAU,IAA1D,UAA+D,cAAC,IAAD,IAA/D,mBACC/C,EAAKgD,OAAS,GACX,eAACC,EAAA,EAAD,CACIrB,MAAO,IACPsB,OAAQ,IACRlD,KAAMA,EACNmD,OAAQ,CAAEC,IAAK,EAAGC,MAAO,GAAIC,KAAM,GAAIC,OAAQ,GAJnD,UAMI,cAACC,EAAA,EAAD,CAAOC,QAAQ,UACf,cAACC,EAAA,EAAD,IAEA,cAACC,EAAA,EAAD,CAAMpD,KAAK,WAAWkD,QAAQ,eAAeG,OAAkB,iBAAVnF,EAA2B,UAAY,UAAWoF,QAAS,IAChH,cAACF,EAAA,EAAD,CAAMpD,KAAK,WAAWkD,QAAQ,SAASG,OAAO,UAAUC,QAAS,W,QCmDtEC,EA7GG,SAACrH,GAAW,IAEtB2E,EAMA3E,EANA2E,MACAC,EAKA5E,EALA4E,mBACAC,EAIA7E,EAJA6E,iBACA7C,EAGAhC,EAHAgC,MACAuD,EAEAvF,EAFAuF,MACApG,EACAa,EADAb,WAPqB,EAUWgB,oBAAS,GAVpB,mBAUjB2B,EAViB,KAUNC,EAVM,KAYnBuF,EAAgB,WAClB,IACIC,GAAY,EACZC,GAAW,EAQf,OAPI7C,EAAMN,OAAS,IACfkD,GAAY,GAEZ5C,EAAML,aAAe,IACrBkD,GAAW,GAGXD,GAAaC,EACN,uBAAM5G,UAAU,eAAhB,UAAgC+D,EAAMhF,MAAtC,IAA6C,cAAC,IAAD,CAAW8E,KAXlD,QAaR8C,GAAaC,EACX,uBAAM5G,UAAU,eAAhB,UAAgC+D,EAAMhF,MAAtC,IAA6C,cAAC,IAAD,CAAc8E,KAdrD,QAgBN,uBAAM7D,UAAU,cAAhB,UAA+B+D,EAAMhF,MAArC,IAA4C,cAAC,IAAD,CAAgB8E,KAhBtD,SAoBfgD,EAAe,WACjB,IAAIF,GAAY,EACZC,GAAW,EAQf,OAPI7C,EAAMN,OAAS,IACfkD,GAAY,GAEZ5C,EAAML,aAAe,IACrBkD,GAAW,GAGXD,GAAaC,EACN,sDAEFD,EAEE,sDAEFC,EAEE,iDAGA,6EAYf,OARAtC,mBAAQ,WACJnD,GAAa,KACd,CAAC8C,IAEJK,mBAAQ,WACJnD,GAAa,KACd,CAAC6C,IAGA,cAAC9D,EAAA,EAAD,UACI,cAACC,EAAA,EAAD,UACI,qBAAKH,UAAU,OAAf,SACKkB,EACG,mCACI,sBAAKlB,UAAU,6BAAf,UACI,eAAC+C,EAAA,EAAKC,MAAN,WAAae,EAAM3B,KAAnB,IAAyB,cAAC,IAAD,OACzB,sBAAKpC,UAAU,0BAAf,UACK0G,IADL,IACsB,uBAAM1G,UAAU,OAAhB,gBAA2B6G,UAEjD,cAAC,EAAD,CAAgB3F,UAAWA,EAAWC,aAAcA,SAI5D,qCACI,sBAAKnB,UAAU,eAAf,UACI,eAAC+C,EAAA,EAAKC,MAAN,WAAae,EAAM3B,KAAnB,IAAyB,cAAC,IAAD,OACzB,cAAC,EAAD,CAAgBlB,UAAWA,EAAWC,aAAcA,OAExD,sBAAKnB,UAAU,0CAAf,UACK0G,IADL,IACsB,uBAAM1G,UAAU,OAAhB,gBAA2B6G,UAEjD,qBAAK7G,UAAU,qCAAf,SACI,cAAC,EAAD,CACIoB,MAAOA,EACPuD,MAAOA,EACPC,MAAO,oBACPC,QAAM,MAGd,qBAAK7E,UAAU,kCAAf,SACI,eAACY,EAAA,EAAD,CAAQb,QAAS,kBAAMxB,EAAWwF,EAAM1B,MAAMxB,QAAQ,QAAQH,MAAO,CAAC6D,MAAO,KAA7E,oBAA0F,cAAC,IAAD,mBCmB3GuC,EA7HC,SAAC1H,GAAW,IAEpB4E,EAQA5E,EARA4E,mBACA+C,EAOA3H,EAPA2H,OACA9C,EAMA7E,EANA6E,iBACA+C,EAKA5H,EALA4H,QACA3F,EAIAjC,EAJAiC,WACAD,EAGAhC,EAHAgC,MACAuD,EAEAvF,EAFAuF,MACAsC,EACA7H,EADA6H,SATmB,EAWK1H,mBAAS,IAXd,mBAWf2H,EAXe,KAWRC,EAXQ,KAavBpC,qBAAU,WACNqC,MACD,CAACJ,IAEJ,IAAMI,EAAW,WACb,IAAIC,EAAS,GACbL,EAAQ9B,SAAQ,SAACnB,EAAOuD,GACfD,EAAOE,SAASxD,EAAMrC,OACvB2F,EAAOlC,KAAKpB,EAAMrC,SAG1B2F,EAAO/B,MAAK,SAACC,EAAGC,GAAJ,OAAUjE,IAAOiE,EAAI,CAAC,eAAe/D,OAAO,YAAcF,IAAOgE,EAAG,CAAC,eAAe9D,OAAO,eACvG0F,EAASE,IAGPG,EAAkB,SAAC9F,GACrB,IAAM+F,EAAQlG,IAAOwF,EAAOW,WAAWC,SAASZ,EAAOa,SAAWb,EAAOW,UAAYX,EAAOa,QACtFC,EAAMtG,IAAOwF,EAAOW,WAAWI,QAAQf,EAAOa,SAAWb,EAAOW,UAAYX,EAAOa,QACzF,SAAIrG,IAAOG,GAAMqG,cAAcN,KAAUlG,IAAOG,GAAMsG,eAAeH,KAOnE5J,EAAc,SAACF,GACjBuE,QAAQC,IAAI,yBAA0BxE,GACtCP,EAAKS,YAAYF,GAAIyE,MAAK,SAAAC,GACtBH,QAAQC,IAAI,oBAAqBE,GACjCH,QAAQC,IAAI,uBAAwBE,EAAIE,KAAKD,QAC7CrB,GAAW,SAAAuB,GAAG,OAAIA,EAAImE,QAAO,SAAAkB,GAAC,OAAIA,EAAE5F,MAAQI,EAAIE,KAAKD,aACrDuE,GAAS,SAAArE,GAAG,OAAIA,EAAImE,QAAO,SAAAkB,GAAC,OAAIA,EAAE5F,MAAQI,EAAIE,KAAKD,gBACpDG,OAAM,SAAA5C,GACLqC,QAAQQ,MAAM,cAAe7C,OAG/B1B,EAAa,SAACR,GAChBuE,QAAQC,IAAI,wBAAyBxE,GACrCP,EAAKe,WAAWR,GAAIyE,MAAK,SAAAC,GACrBH,QAAQC,IAAI,mBAAoBE,GAChCH,QAAQC,IAAI,sBAAuBE,EAAIE,KAAKD,QAC5CrB,GAAW,SAAAuB,GAAG,OAAIA,EAAImE,QAAO,SAAAkB,GAAC,OAAIA,EAAE5F,MAAQI,EAAIE,KAAKD,aACrDuE,GAAS,SAAArE,GAAG,OAAIA,EAAImE,QAAO,SAAAkB,GAAC,OAAIA,EAAE5F,MAAQI,EAAIE,KAAKD,gBACpDG,OAAM,SAAA5C,GACLqC,QAAQQ,MAAM,cAAe7C,OAI/BiE,EAAY,SAACnG,EAAImK,GACnB5F,QAAQC,IAAI,sBAAuBxE,GACnCP,EAAKM,YAAYC,EAAImK,GAAM1F,MAAK,SAAAC,GAC5BH,QAAQC,IAAI,kBAAmBE,GAC/BH,QAAQC,IAAI,qBAAsBE,EAAIE,KAAKD,QAC3CrB,GAAW,SAAAuB,GAAG,4BAAQA,EAAImE,QAAO,SAAAkB,GAAC,OAAIA,EAAE5F,MAAQI,EAAIE,KAAKD,OAAOL,QAAlD,CAAwDI,EAAIE,KAAKD,gBAQvF,OAJA4B,mBAAQ,WACJ8C,MACD,CAACJ,IAGA,8BACKE,EAAMH,QAAO,SAAAoB,GAAC,OAAIX,EAAgBW,MAAIxC,OAAS,EAC5CuB,EAAMH,QAAO,SAAAoB,GAAC,OAAIX,EAAgBW,MAAI7H,KAAI,SAACoB,EAAM0G,GAC7C,OACI,gCACI,oBAAIpI,UAAU,cAAd,SAA6BuB,IAAOG,GAAMD,OAAO,QAChDuF,EAAQD,QAAO,SAAA9G,GAAC,OAAIA,EAAEyB,OAASA,KAAM4D,MAAK,SAACC,EAAGC,GAAJ,OAAUjE,IAAOiE,EAAEpD,KAAM,CAAC,UAAUX,OAAO,OAASF,IAAOgE,EAAEnD,KAAM,CAAC,UAAUX,OAAO,UAAQnB,KAAI,SAACyD,EAAOuD,GAChJ,OAAIvD,EAAMnC,QAEF,cAAC,EAAWkC,MAAZ,CAEIC,MAAOA,EACPC,mBAAoBA,EACpBC,iBAAkBA,EAClBhG,YAAaA,EACbiG,UAAWA,EACX9C,MAAOA,GAPX,gBACkBkG,IAWlB,cAAC,EAAWb,UAAZ,CAEI1C,MAAOA,EACPC,mBAAoBA,EACpBC,iBAAkBA,EAClB1F,WAAYA,EACZ2F,UAAWA,EACX9C,MAAOA,EACPuD,MAAOA,GARX,gBACkB2C,SAlBlC,eAAkBc,OAkC1B,qBAAKpI,UAAU,wBAAf,SACKkH,EAAMvB,OAAS,EACZ,yEAEA,+DC5GT1E,EAXE,SAAC7B,GAAW,IACjB8B,EAA4B9B,EAA5B8B,UAAWC,EAAiB/B,EAAjB+B,aAEbkH,EAAiB,WACnBlH,GAAcD,IAGlB,OAAOA,EAAY,cAAC,IAAD,CAAenB,QAASsI,EAAgBrI,UAAU,iBAAoB,cAAC,IAAD,CAAaD,QAASsI,EAAgBrI,UAAU,kB,kBCyH9HsI,EAtHC,SAAClJ,GAAW,IAEpBmJ,EAMAnJ,EANAmJ,sBACAC,EAKApJ,EALAoJ,oBACAzB,EAIA3H,EAJA2H,OACA0B,EAGArJ,EAHAqJ,UACAC,EAEAtJ,EAFAsJ,cACAtH,EACAhC,EADAgC,MAGJ2D,qBAAU,WACNzC,QAAQC,IAAI,SAAUwE,KACvB,CAACA,IAEJ,IAQM4B,EAAQ,CACV,CACIC,KAAM,cAAC,IAAD,CAAa/E,KA1Bd,KA2BLgF,OAAQ,kBAAMN,GAAsB,SAAA3F,GAAG,OAAKA,MAC5C7D,MAAO,eACP8E,KAAM,GAEV,CACI+E,KAAM,cAAC,IAAD,CAAe/E,KAhChB,KAiCLgF,OAAQ,kBAAML,GAAoB,SAAA5F,GAAG,OAAKA,MAC1C7D,MAAO,aACP8E,KAAM,GAEV,CACI+E,KACI,sBAAKlI,MAAO,CAACgF,SAAU,IAAK1F,UAAU,iBAAtC,UACKuB,IAAOA,IAAOwF,EAAOW,WAAWC,SAASZ,EAAOa,SAAWb,EAAOW,UAAYX,EAAOa,SAASnG,OAAO,WAD1G,MACyHF,IAAOA,IAAOwF,EAAOW,WAAWI,QAAQf,EAAOa,SAAWb,EAAOW,UAAYX,EAAOa,SAASnG,OAAO,WACzN,cAAC,IAAD,CAAYoC,KAzCf,GAyC+B7D,UAAU,8BAE9CjB,MAAO,iBACP+J,SAAU,CACN,CACI/J,MAAO,cAAC,YAAD,CACHgK,OAAQ,CAAChC,GACT5D,SAhCC,SAAC6F,GAElBP,EAAUO,EAAUjC,SA+BJkC,YAAa,CAAW,iBAAV7H,EAA2B,UAAY,cAI7D,CACIrC,MAAO,cAAC6B,EAAA,EAAD,CAAQG,OAAK,EAACF,QAAQ,QAAQd,QAlCjC,WAChB0I,EAAUC,IAiCS,qBAGf7E,KAAM,OAId,OACI,cAAC3D,EAAA,EAAD,CAAKF,UAAU,+BAAf,SACK2I,EAAMrI,KAAI,SAAC4I,EAAM5B,GACd,OAAI4B,EAAKJ,SAED,cAAC3I,EAAA,EAAD,CAAKC,GAAI8I,EAAKrF,KAAd,SACI,cAACsF,EAAA,EAAD,CACIC,UAAU,MACVC,QACI,cAAC,IAAD,CAAStL,GAAE,uBAAkBuJ,GAA7B,SACK4B,EAAKnK,QAJlB,SAQI,eAACqE,EAAA,EAAD,WACI,cAACA,EAAA,EAASC,OAAV,CAAiBC,mBAAiB,EAACzC,QAAQ,QAAQb,UAAU,oBAAoBU,MAAO,CAAC6D,MAAO,QAAhG,SACI,qBAAKvE,UAAU,qBAAqBD,QAASmJ,EAAKL,OAAlD,SACKK,EAAKN,SAId,cAACxF,EAAA,EAASG,KAAV,UACK2F,EAAKJ,SAASxI,KAAI,SAACgJ,EAAUC,GAAX,OACf,qBAAiCxJ,QAASuJ,EAAST,OAASS,EAAST,OAAS,KAA9E,SACKS,EAASvK,OADd,oBAAuBwK,eAlB3C,eAAiCjC,IA4BhC4B,EAAKL,OAEN,cAAC1I,EAAA,EAAD,CAAKC,GAAI8I,EAAKrF,KAAd,SACI,cAACsF,EAAA,EAAD,CACIC,UAAU,MACVC,QACI,cAAC,IAAD,CAAStL,GAAE,uBAAkBuJ,GAA7B,SACK4B,EAAKnK,QAJlB,SAQI,qBAAKiB,UAAU,qBAAqBD,QAASmJ,EAAKL,OAAlD,SACKK,EAAKN,UAVlB,eAAiCtB,IAiB9B,mC,SC1FrBoB,EAAgB,CAClBhB,UAAW,IAAIlG,KACfoG,QAAS,IAAIpG,KAAKD,MAASiI,SAAS,EAAG,MACvCC,IAAK,UAkGMC,EA/FF,SAACtK,GAAW,IACbuK,EAAsCvK,EAAtCuK,YAAavI,EAAyBhC,EAAzBgC,MAAOwI,EAAkBxK,EAAlBwK,QAAStI,EAASlC,EAATkC,KADjB,EAEgB/B,oBAAS,GAFzB,mBAEZ2B,EAFY,KAEDC,EAFC,OAGkC5B,oBAAS,GAH3C,mBAGZyE,EAHY,KAGQuE,EAHR,OAI8BhJ,oBAAS,GAJvC,mBAIZ0E,EAJY,KAIMuE,EAJN,OAKUjJ,mBAASmJ,GALnB,mBAKZ3B,EALY,KAKJ0B,EALI,OAMYlJ,mBAAS,IANrB,mBAMZyH,EANY,KAMH3F,EANG,OAOQ9B,mBAAS,IAPjB,mBAOZoF,EAPY,KAOLsC,EAPK,KA2BpB,OAlBAlC,qBAAU,WACNzC,QAAQC,IAAI,OAAQjB,GAChBA,GACAD,EAAW,GAAD,mBAAKC,EAAK0F,SAAV,YAAsB1F,EAAKqD,WAE1C,CAACrD,IAEJgD,mBAAQ,WACA0C,GAAWA,EAAQrB,OAAS,IAC5BqB,EAAQ1B,MAAK,SAACC,EAAGC,GAAJ,OAAUjE,IAAOiE,EAAE9D,KAAO8D,EAAEpD,KAAM,CAAC,qBAAqBX,OAAO,gBAAkBF,IAAOiE,EAAE9D,KAAO8D,EAAEpD,KAAM,CAAC,qBAAqBX,OAAO,mBACnJwF,EAASD,EAAQD,QAAO,SAAA9G,GAAC,OAAIA,EAAE4J,eAAe,iBAEnD,CAAC7C,IAEJ1C,mBAAQ,WACJnD,GAAa,KACd,CAAC6C,IAGA,cAAC8F,EAAA,EAAD,CAAWC,OAAK,EAAhB,SACI,eAAC7J,EAAA,EAAD,CAAKF,UAAU,SAAf,UACI,eAACG,EAAA,EAAD,CAAKC,GAAI,EAAGJ,UAAU,8BAAtB,UACI,sBAAKA,UAAU,+BAAf,UACI,6CACA,8CAAiBsB,EAAK0I,eAE1B,sBAAKhK,UAAU,6CAAf,UACA,qBAAKA,UAAU,mBAAf,SACmB,iBAAVoB,EACG,cAACR,EAAA,EAAD,CAAQC,QAAQ,QAAQE,OAAK,EAAChB,QAAS4J,EAAvC,SAAoD,cAAC,IAAD,CAAO3J,UAAU,eAAe6D,KAAM,OAE1F,cAACjD,EAAA,EAAD,CAAQC,QAAQ,QAAQE,OAAK,EAAChB,QAAS4J,EAAvC,SAAoD,cAAC,IAAD,CAAiB3J,UAAU,eAAe6D,KAAM,SAG3Gc,EAAMgB,OAAS,GACZ,cAAC/E,EAAA,EAAD,CAAQC,QAAQ,QAAQb,UAAU,OAAlC,SACI,cAAC,EAAYiK,MAAb,CACI7I,MAAOA,EACPuD,MAAOA,EACPC,MAAOrD,IAAO,IAAIC,MAAQC,OAAO,QAAU,aAIvD,eAACb,EAAA,EAAD,CAAQb,QAAS6J,EAAS/I,QAAQ,QAAQE,OAAK,EAACf,UAAU,yBAA1D,sBAA6F,cAAC,IAAD,CAAiB6D,KAAM,cAG5H,cAAC1D,EAAA,EAAD,CAAKW,GAAI,GAAId,UAAU,YAAvB,SACI,sBAAKA,UAAU,oCAAf,UACI,6CACA,8CAAiBsB,EAAK0I,iBAG9B,eAAC7J,EAAA,EAAD,CAAKH,UAAU,eAAf,UACI,cAAC,EAAWiB,SAAZ,CACIC,UAAWA,EACXC,aAAcA,EACdE,WAAYA,EACZD,MAAOA,EACPE,KAAMA,IAEV,cAAC,EAAWgH,QAAZ,CACIC,sBAAuBA,EACvBC,oBAAqBA,EACrBzB,OAAQA,EACR0B,UAAWA,EACXC,cAAeA,EACftH,MAAOA,IAEX,qBAAKpB,UAAWkB,EAAY,oCAAsC,0BAAlE,SACI,cAAC,EAAW4F,QAAZ,CACI9C,mBAAoBA,EACpBC,iBAAkBA,EAClB8C,OAAQA,EACRpC,MAAOA,EACPsC,SAAUA,EACVD,QAASA,EACT3F,WAAYA,EACZD,MAAOA,eCnGpBsI,EAtBF,SAACtK,GAAW,IACb8K,EAAW9K,EAAX8K,OAER,OACI,cAACJ,EAAA,EAAD,CAAWC,OAAK,EAAhB,SACI,cAAC7J,EAAA,EAAD,CAAKF,UAAU,mDAAf,SACI,cAACG,EAAA,EAAD,CAAKgK,GAAI,EAAT,SACI,sBAAKnK,UAAU,YAAf,UACI,qBAAKA,UAAU,+BAAf,SACI,+CAGJ,qBAAKA,UAAU,iBAAf,SACI,eAACY,EAAA,EAAD,CAAQb,QAASmK,EAAQnJ,OAAK,EAACF,QAAQ,UAAUb,UAAU,OAA3D,qBAA2E,cAAC,IAAD,CAAgB6D,KAAM,oB,SCuE9GuG,OAnFf,WAAgB,IAAD,EAC+BC,cAApCC,EADK,EACLA,kBAAmBC,EADd,EACcA,OAAQjJ,EADtB,EACsBA,KADtB,EAEe/B,mBAAS,gBAFxB,mBAEL6B,EAFK,KAEEoJ,EAFF,OAGiBjL,mBAAS,MAH1B,mBAGLkL,EAHK,KAGGC,EAHH,KAKb3F,qBAAU,WACJzD,GACFqJ,MAED,CAACrJ,IAEJ,IAAMqI,EAAc,WACJ,gBAAVvI,GACAoJ,EAAS,gBACThN,EAAKoB,WAAW6L,EAAOpI,IAAK,CAACjB,MAAO,iBAAiBoB,MAAK,SAAAC,GACxDH,QAAQC,IAAI,mBAAoBE,MAC/BI,OAAM,SAAA5C,GACPqC,QAAQQ,MAAM,aAAc7C,QAG9BuK,EAAS,eACThN,EAAKoB,WAAW6L,EAAOpI,IAAK,CAACjB,MAAO,gBAAgBoB,MAAK,SAAAC,GACvDH,QAAQC,IAAI,mBAAoBE,MAC/BI,OAAM,SAAA5C,GACPqC,QAAQQ,MAAM,aAAc7C,QAK9B2J,EAAU,WACdW,KAGII,EAAkB,WACtBnN,EAAKiB,QAAQ6C,EAAK5C,OAAO8D,MAAK,SAAAC,GAC5BH,QAAQC,IAAI,wBAAyBE,GAChCA,EAAIE,KAAKD,QAGZ8H,EAAS/H,EAAIE,KAAKD,OAAOtB,OACzBsJ,EAAUjI,EAAIE,KAAKD,SAHnB/D,OAKDkE,OAAM,SAAA5C,GACPqC,QAAQQ,MAAM,kBAAmB7C,OAI/BtB,EAAa,WACjBnB,EAAKmB,WAAW,CAACD,MAAO4C,EAAK5C,QAAQ8D,MAAK,SAAAC,GACxCH,QAAQC,IAAI,mBAAoBE,GAChCkI,OACC9H,OAAM,SAAA5C,GACPqC,QAAQQ,MAAM,aAAc7C,OAIhC,OACE,qBAAKD,UAAWoB,EAAQ,OAAxB,SACIE,EAMAmJ,EACE,cAAC,IAAD,UACE,cAAC,IAAD,UACE,cAAC,IAAD,CACEG,KAAK,IACLC,OAAK,EACLC,OAAQ,SAAC1L,GAAD,OAAW,cAAC,EAAcsK,KAAf,2BAAwBtK,GAAxB,IAA+BgC,MAAOA,EAAOuI,YAAaA,EAAarI,KAAI,2BAAMA,GAASmJ,GAASb,QAASA,YAKrI,cAAC,EAAgBmB,QAAjB,IAfF,cAAC,EAAgBrB,KAAjB,CAAsBQ,OAAQI,OCtDvBU,GAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,8BAAqB1I,MAAK,YAAkD,IAA/C2I,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCIRO,GAASC,mIAAYC,uBACrBC,GAAWF,mIAAYG,0BAE7BC,IAASf,OACP,cAAC,IAAD,CACEU,OAAQA,GACRG,SAAUA,GACVG,YAAaC,OAAOC,SAASC,OAH/B,SAKE,cAAC,GAAD,MAEFC,SAASC,eAAe,SAM1BnB,O","file":"static/js/main.910b0ebb.chunk.js","sourcesContent":["import axios from 'axios';\n\nconst api = axios.create({\n    baseURL: 'http://localhost:3000/api',\n})\n\n// ENTRIES\nexport const createEntry = payload => api.post(`/entry`, payload);\nexport const getEntries = () => api.get(`/entries`);\nexport const updateEntry = (id, payload) => api.put(`/entry/${id}`, payload);\nexport const deleteEntry = id => api.delete(`/entry/${id}`);\nexport const getEntry = id => api.get(`/entry/${id}`);\n\n// MOODS\nexport const createMood = payload => api.post(`/mood`, payload);\nexport const getMoods = () => api.get(`/mood`);\nexport const updateMood = (id, payload) => api.put(`/mood/${id}`, payload);\nexport const deleteMood = id => api.delete(`/mood/${id}`);\nexport const getMood = id => api.get(`/mood/${id}`);\n\n// USERS\nexport const getUser = email => api.get(`/user/${email}`);\nexport const createUser = payload => api.post(`/user`, payload);\nexport const updateUser = (id, payload) => api.put(`/user/${id}`, payload);\n\nconst apis = {\n    createEntry,\n    getEntries,\n    updateEntry,\n    deleteEntry,\n    getEntry,\n    createMood,\n    getMoods,\n    updateMood,\n    deleteMood,\n    getMood,\n    getUser,\n    createUser,\n    updateUser\n}\n\nexport default apis;","import React, { useState } from 'react';\nimport { Row, Col, Button } from 'react-bootstrap';\nimport { FaPaperPlane } from 'react-icons/fa';\nimport { BsArrowRight, BsArrowLeft } from 'react-icons/bs';\n\nconst cells = [\n    [\n        {color: '#fe0202', label: 'ENRAGED', value: {x: 0, y: 9}},\n        {color: '#ff2603', label: 'PANICKED', value: {x: 1, y: 9}},\n        {color: '#ff4403', label: 'STRESSED', value: {x: 2, y: 9}},\n        {color: '#ff5f03', label: 'JITTERY', value: {x: 3, y: 9}},\n        {color: '#ff7903', label: 'SHOCKED', value: {x: 4, y: 9}},\n        {color: '#ffb600', label: 'SUPRISED', value: {x: 5, y: 9}},\n        {color: '#ffb600', label: 'UPBEAT', value: {x: 6, y: 9}},\n        {color: '#fbce00', label: 'FESTIVE', value: {x: 7, y: 9}},\n        {color: '#f8db02', label: 'EXHILERATED', value: {x: 8, y: 9}},\n        {color: '#f6e701', label: 'ECSTATIC', value: {x: 9, y: 9}}\n    ],\n    [\n        {color: '#ed0a0b', label: 'LIVID', value: {x: 0, y: 8}},\n        {color: '#ee280b', label: 'FURIOUS', value: {x: 1, y: 8}},\n        {color: '#ef3f0a', label: 'FRUSTRATED', value: {x: 2, y: 8}},\n        {color: '#ee540b', label: 'TENSE', value: {x: 3, y: 8}},\n        {color: '#ee6b0b', label: 'STUNNED', value: {x: 4, y: 8}},\n        {color: '#f9b805', label: 'HYPER', value: {x: 5, y: 8}},\n        {color: '#f7bf02', label: 'CHEERFUL', value: {x: 6, y: 8}},\n        {color: '#f5cb06', label: 'MOTIVATED', value: {x: 7, y: 8}},\n        {color: '#f3d405', label: 'INSPIRED', value: {x: 8, y: 8}},\n        {color: '#f2dd01', label: 'ELATED', value: {x: 9, y: 8}}\n    ],\n    [\n        {color: '#de1214', label: 'FUMING', value: {x: 0, y: 7}},\n        {color: '#dd2812', label: 'FRIGHTENED', value: {x: 1, y: 7}},\n        {color: '#dd3913', label: 'ANGRY', value: {x: 2, y: 7}},\n        {color: '#de4912', label: 'NERVOUS', value: {x: 3, y: 7}},\n        {color: '#dd5b11', label: 'RESTLESS', value: {x: 4, y: 7}},\n        {color: '#f1b70c', label: 'ENERGIZED', value: {x: 5, y: 7}},\n        {color: '#f1be0c', label: 'LIVELY', value: {x: 6, y: 7}},\n        {color: '#efc60c', label: 'ENTHUSIASTIC', value: {x: 7, y: 7}},\n        {color: '#efcd0d', label: 'OPTIMISTIC', value: {x: 8, y: 7}},\n        {color: '#ecd506', label: 'EXCITED', value: {x: 9, y: 7}}\n    ],\n    [\n        {color: '#d01819', label: 'ANXIOUS', value: {x: 0, y: 6}},\n        {color: '#d02919', label: 'APPREHENSIVE', value: {x: 1, y: 6}},\n        {color: '#d1371a', label: 'WORRIED', value: {x: 2, y: 6}},\n        {color: '#d04419', label: 'IRRITATED', value: {x: 3, y: 6}},\n        {color: '#d05018', label: 'ANNOYED', value: {x: 4, y: 6}},\n        {color: '#edb712', label: 'PLEASED', value: {x: 5, y: 6}},\n        {color: '#ecbc11', label: 'HAPPY', value: {x: 6, y: 6}},\n        {color: '#ebc212', label: 'FOCUSED', value: {x: 7, y: 6}},\n        {color: '#eac811', label: 'PROUD', value: {x: 8, y: 6}},\n        {color: '#e9cd0f', label: 'THRILLED', value: {x: 9, y: 6}}\n    ],\n    [\n        {color: '#c21f1e', label: 'REPULSED', value: {x: 0, y: 5}},\n        {color: '#c3291e', label: 'TROUBLED', value: {x: 1, y: 5}},\n        {color: '#c4331f', label: 'CONCERNED', value: {x: 2, y: 5}},\n        {color: '#c43a1d', label: 'UNEASY', value: {x: 3, y: 5}},\n        {color: '#c3431e', label: 'PEEVED', value: {x: 4, y: 5}},\n        {color: '#e9b716', label: 'PLEASANT', value: {x: 5, y: 5}},\n        {color: '#e8bb16', label: 'JOYFUL', value: {x: 6, y: 5}},\n        {color: '#e8bd15', label: 'HOPEFUL', value: {x: 7, y: 5}},\n        {color: '#e6c215', label: 'PLAYFUL', value: {x: 8, y: 5}},\n        {color: '#e6c717', label: 'BLISSFUL', value: {x: 9, y: 5}}\n    ],\n    [\n        {color: '#072dd6', label: 'DISGUSTED', value: {x: 0, y: 4}},\n        {color: '#1050ca', label: 'GLUM', value: {x: 1, y: 4}},\n        {color: '#1a6bc1', label: 'DISAPPOINTED', value: {x: 2, y: 4}},\n        {color: '#2089b8', label: 'DOWN', value: {x: 3, y: 4}},\n        {color: '#2aa3ae', label: 'APATHETIC', value: {x: 4, y: 4}},\n        {color: '#78bd36', label: 'AT EASE', value: {x: 5, y: 4}},\n        {color: '#77bb30', label: 'EASYGOING', value: {x: 6, y: 4}},\n        {color: '#79b82a', label: 'CONTENT', value: {x: 7, y: 4}},\n        {color: '#77b625', label: 'LOVING', value: {x: 8, y: 4}},\n        {color: '#78b521', label: 'FULFILLED', value: {x: 9, y: 4}}\n    ],\n    [\n        {color: '#0c2bb4', label: 'PESSIMISTIC', value: {x: 0, y: 3}},\n        {color: '#1646ac', label: 'MOROSE', value: {x: 1, y: 3}},\n        {color: '#1c5ea4', label: 'DICOURAGED', value: {x: 2, y: 3}},\n        {color: '#21749b', label: 'SAD', value: {x: 3, y: 3}},\n        {color: '#298b95', label: 'BORED', value: {x: 4, y: 3}},\n        {color: '#5db43a', label: 'CALM', value: {x: 5, y: 3}},\n        {color: '#5eb233', label: 'SECURE', value: {x: 6, y: 3}},\n        {color: '#5eaf28', label: 'SATISFIED', value: {x: 7, y: 3}},\n        {color: '#5fac22', label: 'GRATEFUL', value: {x: 8, y: 3}},\n        {color: '#5eab1a', label: 'TOUCHED', value: {x: 9, y: 3}}\n    ],\n    [\n        {color: '#142993', label: 'ALIENATED', value: {x: 0, y: 2}},\n        {color: '#1a3d8d', label: 'MISERABLE', value: {x: 1, y: 2}},\n        {color: '#1b5088', label: 'LONELY', value: {x: 2, y: 2}},\n        {color: '#21749b', label: 'DISHEARTENED', value: {x: 3, y: 2}},\n        {color: '#29707b', label: 'TIRED', value: {x: 4, y: 2}},\n        {color: '#43ab3e', label: 'RELAXED', value: {x: 5, y: 2}},\n        {color: '#43a834', label: 'CHILL', value: {x: 6, y: 2}},\n        {color: '#45a226', label: 'RESTFUL', value: {x: 7, y: 2}},\n        {color: '#47a01e', label: 'BLESSED', value: {x: 8, y: 2}},\n        {color: '#479d14', label: 'BALANCED', value: {x: 9, y: 2}}\n    ],\n    [\n        {color: '#19297d', label: 'DESPONDENT', value: {x: 0, y: 1}},\n        {color: '#1b3977', label: 'DEPRESSED', value: {x: 1, y: 1}},\n        {color: '#204372', label: 'SULLEN', value: {x: 2, y: 1}},\n        {color: '#23526d', label: 'EXHAUSTED', value: {x: 3, y: 1}},\n        {color: '#27606a', label: 'FATIGUED', value: {x: 4, y: 1}},\n        {color: '#1fa042', label: 'MELLOW', value: {x: 5, y: 1}},\n        {color: '#219a36', label: 'THOUGHTFUL', value: {x: 6, y: 1}},\n        {color: '#239423', label: 'PEACEFUL', value: {x: 7, y: 1}},\n        {color: '#259017', label: 'COMFY', value: {x: 8, y: 1}},\n        {color: '#248c0a', label: 'CAREFREE', value: {x: 9, y: 1}}\n    ],\n    [\n        {color: '#1c2763', label: 'DESPAIR', value: {x: 0, y: 0}},\n        {color: '#203161', label: 'HOPELESS', value: {x: 1, y: 0}},\n        {color: '#213a5f', label: 'DESOLATE', value: {x: 2, y: 0}},\n        {color: '#24435c', label: 'SPENT', value: {x: 3, y: 0}},\n        {color: '#254c58', label: 'DRAINED', value: {x: 4, y: 0}},\n        {color: '#009347', label: 'SLEEPY', value: {x: 5, y: 0}},\n        {color: '#008e37', label: 'COMPLACENT', value: {x: 6, y: 0}},\n        {color: '#008723', label: 'TRANQUIL', value: {x: 7, y: 0}},\n        {color: '#058213', label: 'COZY', value: {x: 8, y: 0}},\n        {color: '#027c02', label: 'SERENE', value: {x: 9, y: 0}}\n    ],\n]\n\n\nconst Mood = (props) => {\n    const { toggleMoodMeter, submit } = props;\n    const [ mood, setMood ] = useState(null);\n\n    const selectCell = (cell) => {\n        setMood(cell);\n    }\n\n    const renderCellLabel = (y, x) => {\n        try {\n            const _cell = cells[9-(y)][x];\n            if (_cell && _cell !== undefined) {\n                return (<div onClick={() => selectCell(_cell)} className=\"cell-label\">{_cell.label}</div>)\n            } else {\n                return (<div className=\"cell-label\">-</div>)\n            }\n        } catch(e) {\n            // console.error(\"renderCellLabel\", e);\n            return (<div className=\"cell-label\">-</div>)\n        }\n    }\n\n    const onSubmit = () => {\n        submit(mood);\n        setMood(null);\n        toggleMoodMeter();\n    }\n\n    return (\n        <Row className=\"pb-2\">\n            <Col lg={'auto'} xl={5} className=\"mood-meter-container\">\n                {cells.map((row, rIndex) => {\n                    return (\n                        <div className=\"mood-row pl-2\" key={`mood-row-${rIndex}`}>\n                            {row.map((cell, cIndex) => {\n                                return (\n                                    <div \n                                        onClick={() => selectCell(cell)} \n                                        className={cell === mood ? \"mood-cell selected\" : \"mood-cell\"} \n                                        style={{backgroundColor: cell.color}} \n                                        key={`mood-cell-${cIndex}`} \n                                    ></div>\n                                )\n                            })}\n                        </div>\n                    )\n                })}\n                <h5 className=\"text-center\" ><BsArrowLeft/> Pleasantness <BsArrowRight/></h5>\n                <h5 className=\"text-center energy-label\" ><BsArrowLeft/> Energy <BsArrowRight/></h5>\n            </Col>\n\n            <Col className=\"text-center d-flex flex-column justify-content-center\">\n                {!mood ? (\n                    <div>Select a cell</div>\n                ) : (\n                    <div>\n                        <div className=\"d-flex justify-content-center\">\n                            {renderCellLabel(mood.value.y + 1, mood.value.x - 1)}\n                            {renderCellLabel(mood.value.y + 1, mood.value.x)}\n                            {renderCellLabel(mood.value.y + 1, mood.value.x + 1)}\n                        </div>\n                        <div className=\"d-flex justify-content-center\">\n                            {renderCellLabel(mood.value.y, mood.value.x - 1)}\n                            <div className=\"mood-label\">{mood.label}</div>\n                            {renderCellLabel(mood.value.y, mood.value.x + 1)}\n                        </div>\n                        <div className=\"d-flex justify-content-center\">\n                            {renderCellLabel(mood.value.y - 1, mood.value.x - 1)}\n                            {renderCellLabel(mood.value.y - 1, mood.value.x)}\n                            {renderCellLabel(mood.value.y - 1, mood.value.x + 1)}\n                        </div>\n\n                        <Button onClick={onSubmit} variant=\"primary\" className=\"mt-4 px-5\">Submit <FaPaperPlane/></Button>\n\n                    </div>\n                )}\n            </Col>\n\n            <Col xs={12}>\n                <Button onClick={toggleMoodMeter} block variant=\"white\">Cancel</Button>\n            </Col>\n        </Row>\n    )\n}\n\nexport default Mood;","import React, { useState } from 'react';\nimport { Row, Col, Form, Button, Dropdown } from 'react-bootstrap';\nimport * as Diary from '../Diary';\nimport moment from 'moment';\nimport apis from '../../api/index';\nimport { Calendar } from 'react-date-range';\nimport { BsPencil } from 'react-icons/bs';\nimport { FaPaperPlane } from 'react-icons/fa';\nimport { VscSmiley } from 'react-icons/vsc';\nimport Mood from './mood';\n\nconst dateFormat = 'M/DD/YY';\n\nconst NewEntry = (props) => {\n    const { collapsed, setCollapsed, theme, setEntries, user } = props;\n    const [ date, setDate ] = useState(moment(new Date()).format(dateFormat));\n    const [ content, setContent ] = useState('');\n    const [ moodMeter, setMoodMeter ] = useState(false);\n\n    const changeDate = (_date) => {\n        console.log(\"changeDate\", _date);\n        setDate(moment(_date).format(dateFormat));\n    }\n    const resetDate = () => {\n        setDate(moment(new Date()).format(dateFormat));\n    }\n\n    const changeContent = (event) => {\n        setContent(event.target.value);\n    }\n\n    const toggleMoodMeter = () => {\n        setMoodMeter(!moodMeter);\n    }\n\n    const submit = () => {\n        const toSubmit = {\n            date,\n            content,\n            time: moment(new Date()).format('h:mma'),\n            user: user._id\n        }\n        console.log(\"submit:: toSubmit\", toSubmit);\n        apis.createEntry(toSubmit).then(res => {\n            const output = res.data.output;\n            console.log(\"submit:: output\", output);\n            setEntries(old => [...old, output]);\n        }).catch(e => {\n            console.error(\"submit\", e);\n        })\n        setDate(moment(new Date()).format(dateFormat));\n        setContent('');\n    }\n\n    const submitMood = (mood) => {\n        const toSubmit = {\n            date,\n            time: moment(new Date()).format('h:mma'),\n            user: user._id,\n            label: mood.label,\n            energy: mood.value.y,\n            pleasantness: mood.value.x\n        }\n        console.log(\"submitMood:: toSubmit\", toSubmit);\n        apis.createMood(toSubmit).then(res => {\n            const output = res.data.output;\n            console.log(\"submitMood:: output\", output);\n            setEntries(old => [...old, output]);\n        }).catch(e => {\n            console.error(\"submitMood\", e);\n        })\n        setDate(moment(new Date()).format(dateFormat));\n        setContent('');\n    }\n\n    return (\n        <Row className=\"px-3\">\n            <Col>\n                <div className=\"card pb-0\">\n                    {collapsed ? (\n                        <>\n                            <div className=\"entry-header collapsed\">\n                                <Form.Label>New Entry <BsPencil/></Form.Label>\n                                <div className=\"collapsed-new-input\">\n                                    <Form.Control type=\"text\" value={content} onChange={changeContent} />\n                                    <Button onClick={submit} className=\"input-btn\" variant=\"primary\"><FaPaperPlane/></Button>\n                                </div>\n                                <Diary.Collapse collapsed={collapsed} setCollapsed={setCollapsed} />\n                            </div>\n                        </>\n                    ) : (\n                        <>\n                            <div className=\"entry-header\">\n                                <Form.Label>New Entry <BsPencil/></Form.Label>\n                                <div className=\"d-flex align-items-center\">\n                                    <Dropdown className=\"new-entry-date-selector\">\n                                        <Dropdown.Toggle DropdownIndicator variant=\"white\" className=\"text-secondary\">\n                                            Date of post: {date}\n                                        </Dropdown.Toggle>\n                                    \n                                        <Dropdown.Menu>\n                                            <Calendar \n                                                value={new Date(date)}\n                                                onChange={changeDate}\n                                                color={theme === 'theme--light' ? '#004288' : '#cb6d56'}\n                                            />\n                                            <Button block variant=\"white\" onClick={resetDate} >Reset</Button>\n                                        </Dropdown.Menu>\n                                    </Dropdown>\n                                    <Diary.Collapse collapsed={collapsed} setCollapsed={setCollapsed} />\n                                </div>\n                            </div>\n                            {moodMeter ? <Mood toggleMoodMeter={toggleMoodMeter} submit={submitMood} /> : (\n                                <>\n                                    <div className=\"new-entry-content\" >\n                                        <Form.Control as=\"textarea\" rows={3} value={content} onChange={changeContent} />\n                                        <Button onClick={submit} variant=\"primary\" block className=\"btn-sm form-btn\">Submit <FaPaperPlane/></Button>\n                                    </div>\n\n                                \n                                    <Row className=\"pb-2\">\n                                        <Col>\n                                            <Button onClick={toggleMoodMeter} block variant=\"white\">Mood <VscSmiley size={20} className=\"mb-1\" /></Button>\n                                        </Col>\n                                    </Row>\n                                </>\n                            )}\n                        </>\n                    )}\n                </div>\n            </Col>\n        </Row>\n    )\n}\n\nexport default NewEntry;","import React, { useState, useMemo } from 'react';\nimport { Row, Col, Form, Button, Dropdown } from 'react-bootstrap';\nimport * as Diary from '../Diary';\nimport { Calendar } from 'react-date-range';\nimport moment from 'moment';\nimport { BsClock, BsTrash, BsPencilSquare } from 'react-icons/bs';\n\nconst dateFormat = 'M/DD/YY';\n\nconst Entry = (props) => {\n    const {\n        entry,\n        collapseAllTrigger,\n        expandAllTrigger,\n        deleteEntry,\n        editEntry,\n        theme\n    } = props;\n\n    const [ collapsed, setCollapsed ] = useState(true);\n    const [ editing, setEditing ] = useState(null);\n    const [ date, setDate ] = useState(moment(new Date()).format(dateFormat));\n    const [ content, setContent ] = useState('');\n\n    const stopEditing = () => {\n        setEditing(null);\n        setDate(moment(new Date()).format(dateFormat));\n        setContent('');\n    }\n\n    const selectForEdit = (_entry) => {\n        setDate(moment(_entry.date).format(dateFormat));\n        setContent(_entry.content);\n        setEditing(_entry);\n    }\n\n    const changeDate = (_date) => {\n        console.log(\"changeDate\", _date);\n        setDate(moment(_date).format(dateFormat));\n    }\n    const resetDate = () => {\n        setDate(moment(editing.date).format(dateFormat));\n    }\n\n    const changeContent = (event) => {\n        setContent(event.target.value);\n    }\n\n    const confirmEdit = () => {\n        const edit = {\n            date: date,\n            content: content\n        }\n        editEntry(editing._id, edit);\n        stopEditing();\n    }\n\n    useMemo(() => {\n        setCollapsed(false);\n    }, [expandAllTrigger])\n\n    useMemo(() => {\n        setCollapsed(true);\n    }, [collapseAllTrigger])\n\n    useMemo(() => {\n        if (collapsed === true) {\n            stopEditing();\n        }\n    }, [collapsed])\n\n    return (\n        <Row>\n            <Col>\n                <div className=\"card\">\n                    {collapsed ? (\n                        <>\n                            <div className=\"entry-header collapsed m-0\">\n                                <Form.Label>{entry.time} <BsClock/></Form.Label>\n                                <div className=\"entry-content collapsed\">\n                                    {entry.content}\n                                </div>\n                                <Diary.Collapse collapsed={collapsed} setCollapsed={setCollapsed} />\n                            </div> \n                        </>\n                    ) :(\n                        !editing ? (\n                            <>\n                                <div className=\"entry-header\">\n                                    <Form.Label>{entry.time} <BsClock/></Form.Label>\n                                    <Diary.Collapse collapsed={collapsed} setCollapsed={setCollapsed} />\n                                </div>\n                                <div className=\"entry-content\">\n                                    {entry.content}\n                                </div>\n                                <div className=\"d-flex justify-content-end mt-2\">\n                                    <Button onClick={() => selectForEdit(entry)} variant=\"white\" style={{width: 100}}>Edit <BsPencilSquare className=\"mb-1\"/></Button>\n                                    <Button onClick={() => deleteEntry(entry._id)} variant=\"white\" style={{width: 100}}>Delete <BsTrash/></Button>\n                                </div>\n                            </>\n                        ) : (\n                            <>\n                                <div className=\"entry-header\">\n                                    <Form.Label>{editing.time} <BsClock/></Form.Label>\n                                    <div className=\"d-flex align-items-center\">\n                                        <Dropdown className=\"new-entry-date-selector\">\n                                            <Dropdown.Toggle DropdownIndicator variant=\"white\" className=\"text-secondary\">\n                                                Date of post: {date}\n                                            </Dropdown.Toggle>\n                                        \n                                            <Dropdown.Menu>\n                                                <Calendar \n                                                    value={new Date(date)}\n                                                    onChange={changeDate}\n                                                    color={theme === 'theme--light' ? '#004288' : '#cb6d56'}\n                                                />\n                                                <Button block variant=\"white\" onClick={resetDate} >Reset</Button>\n                                            </Dropdown.Menu>\n                                        </Dropdown>\n                                        <Diary.Collapse collapsed={collapsed} setCollapsed={setCollapsed} />\n                                    </div>\n                                </div>\n                                <div className=\"new-entry-content\" >\n                                    <Form.Control as=\"textarea\" rows={3} value={content} onChange={changeContent} className=\"rounded-borders\" />\n                                    {/* <Button onClick={submit} variant=\"primary\" block className=\"btn-sm form-btn\">Confirm</Button> */}\n                                </div>\n                                <div className=\"d-flex justify-content-end mt-2\">\n                                    <Button onClick={stopEditing} variant=\"white\" style={{width: 100}}>Cancel</Button>\n                                    <Button onClick={confirmEdit} variant=\"white\" style={{width: 100}}>Confirm</Button>\n                                </div>\n                            </>\n                        )\n                    )}\n                </div>\n            </Col>\n        </Row>\n    )\n}\n\nexport default Entry;","import React, { useEffect, useState } from 'react';\nimport {\n    LineChart, XAxis, Tooltip, Line, CartesianGrid\n} from 'recharts';\nimport moment from 'moment';\nimport { BsDot } from 'react-icons/bs';\n\n  const exampledata = [\n    {\n      name: 'Page A', uv: 4000, pv: 2400, amt: 2400,\n    },\n    {\n      name: 'Page B', uv: 3000, pv: 1398, amt: 2210,\n    },\n    {\n      name: 'Page C', uv: 2000, pv: 9800, amt: 2290,\n    },\n    {\n      name: 'Page D', uv: 2780, pv: 3908, amt: 2000,\n    },\n    {\n      name: 'Page E', uv: 1890, pv: 4800, amt: 2181,\n    },\n    {\n      name: 'Page F', uv: 2390, pv: 3800, amt: 2500,\n    },\n    {\n      name: 'Page G', uv: 3490, pv: 4300, amt: 2100,\n    },\n  ];\n\nconst AnnualMood = (props) => {\n    const { theme, moods, title, recent } = props;\n    const [ data, setData ] = useState([]);\n\n    useEffect(() => {\n        renderData();\n    }, [moods])\n\n    const renderData = () => {\n        let _data = [];\n        moods.forEach(mood => {\n            _data.push({label: mood.date, energy: mood.energy, pleasantness: mood.pleasantness, amt: parseInt(moment(mood.date).format('YYYYMMDD'))})\n        });\n        _data.sort((a, b) => a.amt - b.amt);\n        if (recent) {\n          _data.slice(0, 5);\n        }\n        console.log(\"DATA\", _data);\n        setData(_data);\n    }\n\n    \n\n    return (\n        <div>\n            <div className=\"text-primary py-3 text-center\">{title}</div>\n            <div className=\"text-left\" style={{color: '#308d45', fontSize: 14}}><BsDot/> Energy</div>\n            <div className=\"text-left text-primary\" style={{fontSize: 14}}><BsDot/> Pleasantness</div>\n            {data.length > 0 && (\n                <LineChart\n                    width={300}\n                    height={200}\n                    data={data}\n                    margin={{ top: 5, right: 48, left: 10, bottom: 5 }}\n                >\n                    <XAxis dataKey=\"label\" />\n                    <Tooltip />\n                    {/* <CartesianGrid stroke=\"#f5f5f5\" /> */}\n                    <Line type=\"monotone\" dataKey=\"pleasantness\" stroke={theme === 'theme--light' ? '#004288' : '#cb6d56'} yAxisId={0} />\n                    <Line type=\"monotone\" dataKey=\"energy\" stroke=\"#308d45\" yAxisId={1} />\n                </LineChart>\n            )}\n        </div>\n    )\n}\n\nexport default AnnualMood;","import React, { useState, useMemo } from 'react';\nimport { Row, Col, Form, Button, Dropdown } from 'react-bootstrap';\nimport * as Diary from '../Diary';\nimport * as Graphs from '../Graphs';\nimport { Calendar } from 'react-date-range';\nimport moment from 'moment';\nimport { BsClock, BsTrash, BsPencilSquare } from 'react-icons/bs';\nimport { VscSmiley } from 'react-icons/vsc';\nimport { AiOutlineFrown, AiOutlineMeh } from 'react-icons/ai';\n\nconst dateFormat = 'M/DD/YY';\n\nconst MoodEntry = (props) => {\n    const {\n        entry,\n        collapseAllTrigger,\n        expandAllTrigger,\n        theme,\n        moods,\n        deleteMood\n    } = props;\n\n    const [ collapsed, setCollapsed ] = useState(true);\n\n    const renderContent = () => {\n        const iconSize = 20;\n        let energetic = true;\n        let pleasant = true;\n        if (entry.energy < 5) {\n            energetic = false;\n        }\n        if (entry.pleasantness < 5) {\n            pleasant = false;\n        }\n\n        if (energetic && pleasant) {\n            return <span className=\"text-success\">{entry.label} <VscSmiley size={iconSize}/></span>;\n        }\n        else if (energetic || pleasant) {\n            return <span className=\"text-primary\">{entry.label} <AiOutlineMeh size={iconSize}/></span>;\n        } else {\n            return <span className=\"text-danger\">{entry.label} <AiOutlineFrown size={iconSize}/></span>;\n        }\n    }\n\n    const renderAdvice = () => {\n        let energetic = true;\n        let pleasant = true;\n        if (entry.energy < 5) {\n            energetic = false;\n        }\n        if (entry.pleasantness < 5) {\n            pleasant = false;\n        }\n\n        if (energetic && pleasant) {\n            return \"Things are looking up! Keep doing what you're doing\";\n        }\n        else if (energetic) {\n            // Angry\n            return \"Try directing your energy towards things you enjoy.\";\n        } \n        else if (pleasant) {\n            // Happy. No energy.\n            return \"You may need some rest, or perhaps motivation.\";\n        }\n        else {\n            return \"Spend time with family and friends. Try doing things that make you happy.\";\n        }\n    }\n\n    useMemo(() => {\n        setCollapsed(false);\n    }, [expandAllTrigger])\n\n    useMemo(() => {\n        setCollapsed(true);\n    }, [collapseAllTrigger])\n\n    return (\n        <Row>\n            <Col>\n                <div className=\"card\">\n                    {collapsed ? (\n                        <>\n                            <div className=\"entry-header collapsed m-0\">\n                                <Form.Label>{entry.time} <BsClock/></Form.Label>\n                                <div className=\"entry-content collapsed\">\n                                    {renderContent()} <span className=\"ml-2\"> - {renderAdvice()}</span>\n                                </div>\n                                <Diary.Collapse collapsed={collapsed} setCollapsed={setCollapsed} />\n                            </div> \n                        </>\n                    ) :(\n                        <>\n                            <div className=\"entry-header\">\n                                <Form.Label>{entry.time} <BsClock/></Form.Label>\n                                <Diary.Collapse collapsed={collapsed} setCollapsed={setCollapsed} />\n                            </div>\n                            <div className=\"entry-content d-flex align-items-center\">\n                                {renderContent()} <span className=\"ml-2\"> - {renderAdvice()}</span>\n                            </div>\n                            <div className=\"d-flex justify-content-center mt-5\">\n                                <Graphs.Moods \n                                    theme={theme} \n                                    moods={moods}\n                                    title={\"Your Recent Moods\"}\n                                    recent\n                                />\n                            </div>\n                            <div className=\"d-flex justify-content-end mt-2\">\n                                <Button onClick={() => deleteMood(entry._id)} variant=\"white\" style={{width: 100}}>Delete <BsTrash/></Button>\n                            </div>\n                        </>\n                    )}\n                </div>\n            </Col>\n        </Row>\n    )\n}\n\nexport default MoodEntry;","import React, { useEffect, useState, useMemo } from 'react';\nimport * as Comp from '../index';\nimport moment from 'moment';\nimport apis from '../../api';\n\nconst Entries = (props) => {\n    const { \n        collapseAllTrigger, \n        filter,\n        expandAllTrigger,\n        entries,\n        setEntries,\n        theme,\n        moods,\n        setMoods\n    } = props;\n    const [ dates, setDates ] = useState([]);\n\n    useEffect(() => {\n        getDates();\n    }, [entries]);\n\n    const getDates = () => {\n        let _dates = [];\n        entries.forEach((entry, index) => {\n            if (!_dates.includes(entry.date)) {\n                _dates.push(entry.date);\n            }\n        })\n        _dates.sort((a, b) => moment(b , ['MM/DD/YYYY']).format('YYYYMMDD') - moment(a, ['MM/DD/YYYY']).format('YYYYMMDD'));\n        setDates(_dates);\n    }\n\n    const calculateFilter = (date) => {\n        const start = moment(filter.startDate).isBefore(filter.endDate) ? filter.startDate : filter.endDate;\n        const end = moment(filter.startDate).isAfter(filter.endDate) ? filter.startDate : filter.endDate\n        if (moment(date).isSameOrAfter(start) && moment(date).isSameOrBefore(end)) {\n            return true;\n        } else {\n            return false;\n        }\n    }\n\n    const deleteEntry = (id) => {\n        console.log(\"deleteEntry:: deleting\", id);\n        apis.deleteEntry(id).then(res => {\n            console.log(\"deleteEntry:: res\", res);\n            console.log(\"deleteEntry:: output\", res.data.output);\n            setEntries(old => old.filter(o => o._id !== res.data.output));\n            setMoods(old => old.filter(o => o._id !== res.data.output));\n        }).catch(e => {\n            console.error('deleteEntry', e);\n        })\n    }\n    const deleteMood = (id) => {\n        console.log(\"deleteMood:: deleting\", id);\n        apis.deleteMood(id).then(res => {\n            console.log(\"deleteMood:: res\", res);\n            console.log(\"deleteMood:: output\", res.data.output);\n            setEntries(old => old.filter(o => o._id !== res.data.output));\n            setMoods(old => old.filter(o => o._id !== res.data.output));\n        }).catch(e => {\n            console.error('deleteEntry', e);\n        })\n    }\n\n    const editEntry = (id, body) => {\n        console.log(\"editEntry:: editing\", id);\n        apis.updateEntry(id, body).then(res => {\n            console.log(\"editEntry:: res\", res);\n            console.log(\"editEntry:: output\", res.data.output);\n            setEntries(old => [...old.filter(o => o._id !== res.data.output._id), res.data.output]);\n        })\n    }\n\n    useMemo(() => {\n        getDates();\n    }, [entries])\n\n    return (\n        <div>\n            {dates.filter(d => calculateFilter(d)).length > 0 ? (\n                dates.filter(d => calculateFilter(d)).map((date, yIndex) => {\n                    return (\n                        <div key={`year-${yIndex}`}>\n                            <h4 className=\"date-header\">{moment(date).format('ll')}</h4>\n                            {entries.filter(e => e.date === date).sort((a, b) => moment(b.time, ['h:mma']).format('Hmm') - moment(a.time, ['h:mma']).format('Hmm')).map((entry, index) => {\n                                if (entry.content) {\n                                    return (\n                                        <Comp.Diary.Entry \n                                            key={`entry-${index}`}\n                                            entry={entry}\n                                            collapseAllTrigger={collapseAllTrigger}\n                                            expandAllTrigger={expandAllTrigger}\n                                            deleteEntry={deleteEntry}\n                                            editEntry={editEntry}\n                                            theme={theme} \n                                        />\n                                    )\n                                } else {\n                                    return (\n                                        <Comp.Diary.MoodEntry \n                                            key={`entry-${index}`}\n                                            entry={entry}\n                                            collapseAllTrigger={collapseAllTrigger}\n                                            expandAllTrigger={expandAllTrigger}\n                                            deleteMood={deleteMood}\n                                            editEntry={editEntry}\n                                            theme={theme} \n                                            moods={moods}\n                                        />\n                                    )\n                                }\n                            })}\n                        </div>\n                    )\n                })\n            ) : (\n                <div className=\"card py-5 text-center\">\n                    {dates.length > 0 ? (\n                        <div>You have no entries in this date range</div>\n                    ) : (\n                        <div>You have no entries yet</div>\n                    )}\n                </div>\n            )}\n        </div>\n    )\n}\n\nexport default Entries;","import React from 'react';\nimport { BsChevronUp, BsChevronDown } from 'react-icons/bs';\n\nconst NewEntry = (props) => {\n    const { collapsed, setCollapsed } = props;\n\n    const toggleCollapse = () => {\n        setCollapsed(!collapsed);\n    }\n\n    return collapsed ? <BsChevronDown onClick={toggleCollapse} className='collapse-btn' /> : <BsChevronUp onClick={toggleCollapse} className='collapse-btn' />\n    \n}\n\nexport default NewEntry;","import React, { useState, useEffect } from 'react';\nimport { Container, Row, Col, Form, Button, OverlayTrigger, Tooltip, Dropdown } from 'react-bootstrap';\nimport * as Diary from '../Diary';\nimport Calendar from 'react-calendar';\nimport { DateRange } from 'react-date-range';\nimport moment from 'moment';\nimport { BsPencil, BsChevronUp, BsChevronDown, BsClock, BsChevronBarExpand, BsCalendar } from 'react-icons/bs';\nimport { FaPaperPlane } from 'react-icons/fa';\nimport { VscSmiley, VscFilter } from 'react-icons/vsc';\nimport { HiOutlineDotsHorizontal } from 'react-icons/hi';\n\nconst toolSize = 24;\n\nconst ToolBar = (props) => {\n    const { \n        setCollapseAllTrigger, \n        setExpandAllTrigger, \n        filter, \n        setFilter, \n        initialFilter,\n        theme\n    } = props;\n\n    useEffect(() => {\n        console.log(\"FILTER\", filter);\n    }, [filter])\n\n    const changeFilter = (selection) => {\n        // console.log(\"changeFilter\", selection);\n        setFilter(selection.filter);\n    }\n    const resetFilter = () => {\n        setFilter(initialFilter);\n    }\n\n    const tools = [\n        {\n            icon: <BsChevronUp size={toolSize}/>,\n            action: () => setCollapseAllTrigger(old => !old),\n            label: 'Collapse All',\n            size: 3\n        },\n        {\n            icon: <BsChevronDown size={toolSize}/>,\n            action: () => setExpandAllTrigger(old => !old),\n            label: 'Expand All',\n            size: 3\n        },\n        {\n            icon: \n                <div style={{fontSize: 14}} className=\"text-secondary\">\n                    {moment(moment(filter.startDate).isBefore(filter.endDate) ? filter.startDate : filter.endDate).format('M/DD/YY')} - {moment(moment(filter.startDate).isAfter(filter.endDate) ? filter.startDate : filter.endDate).format('M/DD/YY')} \n                    <BsCalendar size={toolSize} className=\"mb-1 ml-2 text-primary\" />\n                </div>,\n            label: 'Filter Entries',\n            dropdown: [\n                {\n                    label: <DateRange\n                        ranges={[filter]}\n                        onChange={changeFilter}\n                        rangeColors={[theme === 'theme--light' ? '#004288' : '#cb6d56']}\n                        // color=\"#004288\"\n                    />\n                },\n                {\n                    label: <Button block variant=\"white\" onClick={resetFilter} >Reset</Button>\n                },\n            ],\n            size: null\n        },\n    ]\n\n    return (\n        <Row className=\"px-3 justify-content-between\">\n            {tools.map((tool, index) => {\n                if (tool.dropdown) {\n                    return (\n                        <Col lg={tool.size} key={`tool-${index}`} >\n                            <OverlayTrigger\n                                placement='top'\n                                overlay={\n                                    <Tooltip id={`tool-tooltip-${index}`}>\n                                        {tool.label}\n                                    </Tooltip>\n                                }\n                            >\n                                <Dropdown>\n                                    <Dropdown.Toggle DropdownIndicator variant=\"clear\" className=\"dropdown-card-btn\" style={{width: '100%'}}>\n                                        <div className=\"card py-2 card-btn\" onClick={tool.action}>\n                                            {tool.icon}\n                                        </div>\n                                    </Dropdown.Toggle>\n                                \n                                    <Dropdown.Menu>\n                                        {tool.dropdown.map((toolItem, tIndex) => (\n                                            <div key={`tool-item-${tIndex}`} onClick={toolItem.action ? toolItem.action : null}>\n                                                {toolItem.label}\n                                            </div>\n                                        ))}\n                                    </Dropdown.Menu>\n                                </Dropdown>\n                            </OverlayTrigger>\n                        </Col>\n                    )\n                }\n                else if (tool.action) {\n                    return (\n                        <Col lg={tool.size} key={`tool-${index}`} >\n                            <OverlayTrigger\n                                placement='top'\n                                overlay={\n                                    <Tooltip id={`tool-tooltip-${index}`}>\n                                        {tool.label}\n                                    </Tooltip>\n                                }\n                            >\n                                <div className=\"card py-2 card-btn\" onClick={tool.action}>\n                                    {tool.icon}\n                                </div>\n                            </OverlayTrigger>\n                        </Col>\n                    )\n                }\n                else {\n                    return <></>\n                }\n            })}\n        </Row>\n    )\n}\n\nexport default ToolBar;","import React, { useState, useMemo, useEffect } from 'react';\nimport { Container, Row, Col, Button } from 'react-bootstrap';\nimport * as Comp from '../../components';\nimport moment from 'moment';\nimport { BsSun } from 'react-icons/bs';\nimport { RiMoonClearFill } from 'react-icons/ri';\nimport { AiOutlineLogout } from 'react-icons/ai';\nimport apis from '../../api';\n\nconst testEntries = [\n    {\n        date: '12/08/2020',\n        time: '6:45pm',\n        content: 'Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.'\n    },\n    {\n        date: '11/17/2019',\n        time: '11:30am',\n        content: 'Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.'\n    },\n    {\n        date: '12/08/2020',\n        time: '7:13pm',\n        content: 'Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.'\n    },\n    {\n        date: '10/08/2020',\n        time: '3:00pm',\n        content: 'Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.'\n    },\n];\n\nconst testing = false;\n\nconst initialFilter = {\n    startDate: new Date(),\n    endDate: new Date(moment().subtract(3, 'y')),\n    key: 'filter'\n}\n\nconst Main = (props) => {\n    const { toggleTheme, theme, signOut, user } = props;\n    const [ collapsed, setCollapsed ] = useState(true);\n    const [ collapseAllTrigger, setCollapseAllTrigger ] = useState(false);\n    const [ expandAllTrigger, setExpandAllTrigger ] = useState(false);\n    const [ filter, setFilter ] = useState(initialFilter);\n    const [ entries, setEntries ] = useState([]);\n    const [ moods, setMoods ] = useState([]);\n\n    useEffect(() => {\n        console.log(\"User\", user);\n        if (user) {\n            setEntries([...user.entries, ...user.moods]);\n        }\n    }, [user])\n\n    useMemo(() => {\n        if (entries && entries.length > 0) {\n            entries.sort((a, b) => moment(b.date + b.time, ['MM/DD/YYYYh:mm a']).format('YYYYMMDDHHmm') - moment(b.date + b.time, ['MM/DD/YYYYh:mm a']).format('YYYYMMDDHHmm'));\n            setMoods(entries.filter(e => e.hasOwnProperty('energy')));\n        }\n    }, [entries])\n\n    useMemo(() => {\n        setCollapsed(true);\n    }, [collapseAllTrigger])\n\n    return (\n        <Container fluid>\n            <Row className=\"max-vh\">\n                <Col lg={3} className=\"side-menu d-none d-lg-block\">\n                    <div className=\"themed-underline text-center\">\n                        <h1>Smart Diary</h1>\n                        <h5>Property of {user.nickname}</h5>\n                    </div>\n                    <div className=\"d-flex flex-column justify-content-between\">\n                    <div className=\"text-center mt-4\">\n                            {theme === 'theme--light' ? (\n                                <Button variant=\"light\" block onClick={toggleTheme}><BsSun className=\"text-warning\" size={40} /></Button>\n                            ) : (\n                                <Button variant=\"light\" block onClick={toggleTheme}><RiMoonClearFill className=\"text-primary\" size={40} /></Button>\n                            )}\n                        </div>\n                        {moods.length > 0 && (\n                            <Button variant=\"light\" className=\"mt-3\">\n                                <Comp.Graphs.Moods \n                                    theme={theme} \n                                    moods={moods}\n                                    title={moment(new Date()).format('YYYY') + ' Moods'}\n                                />\n                            </Button>\n                        )}\n                        <Button onClick={signOut} variant=\"light\" block className=\"text-primary mt-3 py-2\" >Sign Out <AiOutlineLogout size={25} /></Button>\n                    </div>\n                </Col>\n                <Col xs={12} className=\"d-lg-none\">\n                    <div className=\"themed-underline text-center mt-4\">\n                        <h1>Smart Diary</h1>\n                        <h5>Property of {user.nickname}</h5>\n                    </div>\n                </Col>\n                <Col className=\"main-content\">\n                    <Comp.Diary.NewEntry \n                        collapsed={collapsed} \n                        setCollapsed={setCollapsed} \n                        setEntries={setEntries} \n                        theme={theme} \n                        user={user}\n                    />\n                    <Comp.Diary.ToolBar \n                        setCollapseAllTrigger={setCollapseAllTrigger} \n                        setExpandAllTrigger={setExpandAllTrigger} \n                        filter={filter} \n                        setFilter={setFilter} \n                        initialFilter={initialFilter}\n                        theme={theme}\n                    />\n                    <div className={collapsed ? 'scrollable-content collapsed px-3' : 'scrollable-content px-3'}>\n                        <Comp.Diary.Entries \n                            collapseAllTrigger={collapseAllTrigger} \n                            expandAllTrigger={expandAllTrigger}\n                            filter={filter}\n                            moods={moods}\n                            setMoods={setMoods}\n                            entries={entries}\n                            setEntries={setEntries}\n                            theme={theme} \n                        />\n                    </div>\n                </Col>\n            </Row>\n        </Container>\n    )\n}\n\nexport default Main;","import { cs } from 'date-fns/locale';\nimport React from 'react';\nimport { Container, Row, Col, Button } from 'react-bootstrap';\nimport { AiOutlineLogin } from 'react-icons/ai';\n\nconst Main = (props) => {\n    const { signIn } = props;\n\n    return (\n        <Container fluid>\n            <Row className=\"max-vh justify-content-center align-items-center\">\n                <Col md={5}>\n                    <div className=\"card py-5\">\n                        <div className=\"themed-underline text-center\">\n                            <h1>Smart Diary</h1>\n                        </div>\n\n                        <div className=\"mt-5 px-5 mx-5\">\n                            <Button onClick={signIn} block variant=\"primary\" className=\"py-3\" >Sign In <AiOutlineLogin size={25} /></Button>\n                        </div>\n                    </div>\n                </Col>\n            </Row>\n        </Container>\n    )\n}\n\nexport default Main;","import { useState, useEffect } from 'react';\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\nimport * as Screens from './screens';\nimport { useAuth0 } from '@auth0/auth0-react';\nimport apis from './api';\n\nfunction App() {\n  const { loginWithRedirect, logout, user } = useAuth0();\n  const [ theme, setTheme ] = useState('theme--light');\n  const [ dbUser, setDbUser ] = useState(null);\n\n  useEffect(() => {\n    if (user) {\n      connectUserToDb();\n    }\n  }, [user])\n\n  const toggleTheme = () => {\n    if (theme === 'theme--dark') {\n        setTheme('theme--light');\n        apis.updateUser(dbUser._id, {theme: 'theme--light'}).then(res => {\n          console.log(\"updateUser:: res\", res);\n        }).catch(e => {\n          console.error(\"updateUser\", e);\n        })\n    } else {\n        setTheme('theme--dark');\n        apis.updateUser(dbUser._id, {theme: 'theme--dark'}).then(res => {\n          console.log(\"updateUser:: res\", res);\n        }).catch(e => {\n          console.error(\"updateUser\", e);\n        })\n    }\n  }\n\n  const signOut = () => {\n    logout();\n  }\n\n  const connectUserToDb = () => {\n    apis.getUser(user.email).then(res => {\n      console.log(\"connectUserToDb:: res\", res);\n      if (!res.data.output) {\n        createUser();\n      } else {\n        setTheme(res.data.output.theme);\n        setDbUser(res.data.output);\n      }\n    }).catch(e => {\n      console.error(\"connectUserToDb\", e);\n    }) \n  }\n\n  const createUser = () => {\n    apis.createUser({email: user.email}).then(res => {\n      console.log(\"createUser:: res\", res);\n      connectUserToDb();\n    }).catch(e => {\n      console.error(\"createUser\", e);\n    })\n  }\n\n  return (\n    <div className={theme + ' App'}>\n      {!user ? (\n\n        <Screens.Welcome.Main signIn={loginWithRedirect} />\n\n      ) : (\n        \n        dbUser ? (\n          <Router>\n            <Switch>\n              <Route \n                path=\"/\" \n                exact\n                render={(props) => <Screens.Diary.Main {...props} theme={theme} toggleTheme={toggleTheme} user={{...user, ...dbUser}} signOut={signOut} />} \n              />\n            </Switch>\n          </Router>\n        ) : (\n          <Screens.Welcome.Loading />\n        )\n\n      )}\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './index.css';\nimport './styles/calendar.scss';\nimport './styles/mood.scss';\nimport './styles/theme.scss';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { Auth0Provider } from '@auth0/auth0-react';\n\nconst domain = process.env.REACT_APP_AUTH0_DOMAIN;\nconst clientId = process.env.REACT_APP_AUTH0_CLIENT_ID;\n\nReactDOM.render(\n  <Auth0Provider\n    domain={domain}\n    clientId={clientId}\n    redirectUri={window.location.origin}\n  >\n    <App />\n  </Auth0Provider>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}