{"ast":null,"code":"var _jsxFileName = \"/Users/jordanmccollam/Documents/projects/smartdiary/client/src/App.js\",\n    _s = $RefreshSig$();\n\nimport { useState, useEffect } from 'react';\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\nimport * as Screens from './screens';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [theme, setTheme] = useState('theme--light');\n\n  const toggleTheme = () => {\n    if (theme === 'theme--dark') {\n      setTheme('theme--light');\n    } else {\n      setTheme('theme--dark');\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: theme + ' App',\n    children: /*#__PURE__*/_jsxDEV(Router, {\n      children: /*#__PURE__*/_jsxDEV(Switch, {\n        children: /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/\",\n          exact: true,\n          render: props => /*#__PURE__*/_jsxDEV(Screens.Diary.Main, { ...props,\n            theme: theme,\n            toggleTheme: toggleTheme\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 23,\n            columnNumber: 30\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 20,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 5\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 17,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"A6yBCLswtrEcu9I2vm7BFjACRSg=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/jordanmccollam/Documents/projects/smartdiary/client/src/App.js"],"names":["useState","useEffect","BrowserRouter","Router","Route","Switch","Screens","App","theme","setTheme","toggleTheme","props"],"mappings":";;;AAAA,SAASA,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;AACA,SAASC,aAAa,IAAIC,MAA1B,EAAkCC,KAAlC,EAAyCC,MAAzC,QAAuD,kBAAvD;AACA,OAAO,KAAKC,OAAZ,MAAyB,WAAzB;;;AAEA,SAASC,GAAT,GAAe;AAAA;;AACb,QAAM,CAAEC,KAAF,EAASC,QAAT,IAAsBT,QAAQ,CAAC,cAAD,CAApC;;AAEA,QAAMU,WAAW,GAAG,MAAM;AACxB,QAAIF,KAAK,KAAK,aAAd,EAA6B;AACzBC,MAAAA,QAAQ,CAAC,cAAD,CAAR;AACH,KAFD,MAEO;AACHA,MAAAA,QAAQ,CAAC,aAAD,CAAR;AACH;AACF,GAND;;AAQA,sBACE;AAAK,IAAA,SAAS,EAAED,KAAK,GAAG,MAAxB;AAAA,2BACA,QAAC,MAAD;AAAA,6BACE,QAAC,MAAD;AAAA,+BACE,QAAC,KAAD;AACE,UAAA,IAAI,EAAC,GADP;AAEE,UAAA,KAAK,MAFP;AAGE,UAAA,MAAM,EAAGG,KAAD,iBAAW,QAAC,OAAD,CAAS,KAAT,CAAe,IAAf,OAAwBA,KAAxB;AAA+B,YAAA,KAAK,EAAEH,KAAtC;AAA6C,YAAA,WAAW,EAAEE;AAA1D;AAAA;AAAA;AAAA;AAAA;AAHrB;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA,UADF;AAaD;;GAxBQH,G;;KAAAA,G;AA0BT,eAAeA,GAAf","sourcesContent":["import { useState, useEffect } from 'react';\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\nimport * as Screens from './screens';\n\nfunction App() {\n  const [ theme, setTheme ] = useState('theme--light');\n\n  const toggleTheme = () => {\n    if (theme === 'theme--dark') {\n        setTheme('theme--light');\n    } else {\n        setTheme('theme--dark');\n    }\n  }\n\n  return (\n    <div className={theme + ' App'}>\n    <Router >\n      <Switch>\n        <Route \n          path=\"/\" \n          exact\n          render={(props) => <Screens.Diary.Main {...props} theme={theme} toggleTheme={toggleTheme} />} \n        />\n      </Switch>\n    </Router>\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}